ggplot(hikes, aes(x = elevation)) + geom_histogram()
ggplot(hikes, aes(x = elevation))
ggplot(hikes, aes(x = elevation)) +geom_histogram()
# COMMENT on the change in the code and the corresponding change in the plot
ggplot(hikes, aes(x = elevation)) +
geom_histogram()
# COMMENT on the change in the code and the corresponding change in the plot
ggplot(hikes, aes(x = elevation)) +
geom_histogram(color = "white")
# COMMENT on the change in the code and the corresponding change in the plot
ggplot(hikes, aes(x = elevation)) +
geom_histogram(color = "white", fill = "blue")
# COMMENT on the change in the code and the corresponding change in the plot
ggplot(hikes, aes(x = elevation)) +
geom_histogram(color = "white") +
labs(x = "Elevation (feet)", y = "Number of hikes")
# COMMENT on the change in the code and the corresponding change in the plot
ggplot(hikes, aes(x = elevation)) +
geom_histogram(color = "white", binwidth = 1000) +
labs(x = "Elevation (feet)", y = "Number of hikes")
# COMMENT on the change in the code and the corresponding change in the plot
ggplot(hikes, aes(x = elevation)) +
geom_histogram(color = "white", binwidth = 5) +
labs(x = "Elevation (feet)", y = "Number of hikes")
# COMMENT on the change in the code and the corresponding change in the plot
ggplot(hikes, aes(x = elevation)) +
geom_histogram(color = "white", binwidth = 200) +
labs(x = "Elevation (feet)", y = "Number of hikes")
ggplot(hikes, aes(x = elevation)) +
geom_density()
ggplot(hikes, aes(x = elevation)) +
geom_density()
geom_density(color = "blue")`
-   `geom_density (fill = "orange")`
ggplot(hikes, aes(x = elevation)) +
geom_density()
+geom_density(color = "blue")`
-   `geom_density (fill = "orange")`
ggplot(hikes, aes(x = elevation)) +
geom_density()
+geom_density(color = "blue")
ggplot(hikes, aes(x = elevation)) +
geom_density()
geom_density(color = "blue")
-   geom_density (fill = "orange")
ggplot(hikes, aes(x = elevation)) +
geom_density()
geom_density(color = "blue")
geom_density (fill = "orange")
ggplot(hikes, aes(x = elevation)) +
geom_density(color = "blue", fill = "orange")
#| eval: false
ggplot(___, aes(x = ___)) +
# YUCK
ggplot(hikes, aes(x = elevation)) +
geom_histogram(color = "white", binwidth = 200) +
labs(x = "Elevation (feet)", y = "Number of hikes")
# YUCK
ggplot(hikes, aes(x = elevation)) + geom_histogram(color = "white", binwidth = 200) + labs(x = "Elevation (feet)", y = "Number of hikes")
# Data on students in this class
survey <- read.csv("https://hash-mac.github.io/stat112site-s25/data/survey.csv")
# World Cup data
world_cup <- read.csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv")
View(survey)
# Data on students in this class
survey <- read.csv("https://hash-mac.github.io/stat112site-s25/data/survey.csv")
ggplot(survey, aes(x=hangout))
# World Cup data
world_cup <- read.csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv")
# Data on students in this class
survey <- read.csv("https://hash-mac.github.io/stat112site-s25/data/survey.csv")
ggplot(survey, aes(x=hangout))+geom_bar()
# World Cup data
world_cup <- read.csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv")
# Data on students in this class
survey <- read.csv("https://hash-mac.github.io/stat112site-s25/data/survey.csv")
ggplot(survey, aes(x=hangout))+geom_bar(color = pink)
# Data on students in this class
survey <- read.csv("https://hash-mac.github.io/stat112site-s25/data/survey.csv")
ggplot(survey, aes(x=hangout))+geom_bar(color = orange)
# Data on students in this class
survey <- read.csv("https://hash-mac.github.io/stat112site-s25/data/survey.csv")
ggplot(survey, aes(x=hangout))+geom_bar(color = "pink")
# World Cup data
world_cup <- read.csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv")
# Data on students in this class
survey <- read.csv("https://hash-mac.github.io/stat112site-s25/data/survey.csv")
ggplot(survey, aes(x=hangout))+geom_bar(color = "pink", fill = "purple")
# World Cup data
world_cup <- read.csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv")
# Use the ggplot function
ggplot(hikes, aes(x = rating))
# Use the ggplot function
# Import data
survey <- read.csv("https://ajohns24.github.io/data/112/about_us_2024.csv")
# How many students have now filled out the survey?
# What type of variables do we have?
View(survey)
# Import data
survey <- read.csv("https://ajohns24.github.io/data/112/about_us_2024.csv")
# How many students have now filled out the survey?
nrow("data")
# What type of variables do we have?
# Import data
survey <- read.csv("https://ajohns24.github.io/data/112/about_us_2024.csv")
# How many students have now filled out the survey?
nrow("survey")
# What type of variables do we have?
# Import data
survey <- read.csv("https://ajohns24.github.io/data/112/about_us_2024.csv")
# How many students have now filled out the survey?
dim("survey")
# What type of variables do we have?
?dim
# Import data
survey <- read.csv("https://ajohns24.github.io/data/112/about_us_2024.csv")
# How many students have now filled out the survey?
head("survey")
# What type of variables do we have?
# Import data
survey <- read.csv("https://ajohns24.github.io/data/112/about_us_2024.csv")
# How many students have now filled out the survey?
nrow(survey)
# What type of variables do we have?
# Import data
survey <- read.csv("https://ajohns24.github.io/data/112/about_us_2024.csv")
# How many students have now filled out the survey?
nrow(survey)
28 students
# Import data
survey <- read.csv("https://ajohns24.github.io/data/112/about_us_2024.csv")
# How many students have now filled out the survey?
nrow(survey)
# What type of variables do we have?
str(survey)
# Attach a package needed to use the ggplot function
library(tidyverse)
# Make a ggplot
# Attach a package needed to use the ggplot function
library(tidyverse)
# Make a ggplot
ggplot(survey, aes(x=hangout)) + geom_bar()
ggplot(survey, aes(x = fave_temp)) +
geom_histogram(color = "white", binwidth = 5)
ggplot(survey, aes(x = fave_temp)) +
geom_density()
ggplot(survey, aes(x = fave_temp)) +
geom_histogram(color = "white",fill = "lavender", binwidth = 5)
library(tidyverse)
ggplot(survey, aes(x = fave_temp)) +
geom_histogram(color = "white",fill = "lavender", binwidth = 5)
ggplot(survey, aes(x = fave_temp)) +
geom_histogram(color = "white", binwidth = 5)
# Import data
survey <- read.csv("https://ajohns24.github.io/data/112/about_us_2024.csv")
# How many students have now filled out the survey?
nrow(survey)
# What type of variables do we have?
str(survey)
ggplot(survey, aes(x = fave_temp)) +
geom_histogram(color = "white", binwidth = 5)
data.frame(temp_3pm = c(24, 26, 20, 15, 15, 15), temp_9am = c(14, 18, 15, 13, 11, 11))
weather <- data.frame(temp_3pm = c(24, 26, 20, 15, 15, 0, 40, 60, 57, 44, 51, 75),
location = rep(c("A", "B"), each = 6))
weather
ggplot(weather, aes(x = temp_3pm)) +
geom_density()
weather <- data.frame(rain_today = c("no", "no", "no", "no", "yes", "no", "yes", "no", "yes", "yes", "no", "yes"),
location = c(rep("A", 7), rep("B", 5)))
weather
ggplot(weather, aes(x = location)) +
geom_bar()
# Load data
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")
# Check it out
head(elections)
ggplot(elections, aes(x = winner_20)) +
geom_bar()
ggplot(elections, aes(x = repub_pct_20)) +
geom_histogram(color = "white")
ggplot (elections, aes(x = repub_pct_16, y = repub_pct_20))
ggplot (elections, aes(x = repub_pct_16, y = repub_pct_20)) + geom_point()
# Set up the plotting frame
# How does this differ than the frame for our histogram of repub_pct_20 alone?
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))
# Add a layer of points for each county
# Take note of the geom!
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
geom_point()
# Change the shape of the points
# What happens if you change the shape to another number?
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
geom_point(shape = 3)
# YOU TRY: Modify the code to make the points "orange"
# NOTE: Try to anticipate if "color" or "fill" will be useful here. Then try both.
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
geom_point()
# YOU TRY: Modify the code to make the points "orange"
# NOTE: Try to anticipate if "color" or "fill" will be useful here. Then try both.
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
geom_point(fill = "orange")
# YOU TRY: Modify the code to make the points "orange"
# NOTE: Try to anticipate if "color" or "fill" will be useful here. Then try both.
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
geom_point(color = "orange")
# Add a layer that represents each county by the state it's in
# Take note of the geom and the info it needs to run!
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
geom_text(aes(label = state_abbr))
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
geom_point() +
geom_smooth()
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
geom_smooth()
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
geom_point() +
geom_smooth(method = "lm")
# Scatterplot of repub_pct_20 vs median_rent
ggplot(elections, aes(y = repub_pct_20, x = median_rent)) +
geom_point()
# Scatterplot of repub_pct_20 vs median_age
# Scatterplot of repub_pct_20 vs median_rent
ggplot(elections, aes(y = repub_pct_20, x = median_rent)) +
geom_point()
# Scatterplot of repub_pct_20 vs median_age
ggplot(elections, aes (y = repub_pct_20, x = median_age)) + geom_point()
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
geom_point()
# Side-by-side violin plots
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
geom_violin()
# Side-by-side boxplots (defined below)
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
geom_boxplot()
ggplot(elections, aes(x = repub_pct_20)) +
geom_density()
# Name two "bad" things about this plot
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
geom_density()
# What does scale_fill_manual do?
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
geom_density() +
scale_fill_manual(values = c("blue", "purple", "red"))
?scale_fill_manual
# What does alpha = 0.5 do?
# Play around with different values of alpha, between 0 and 1
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
geom_density(alpha = 0.5) +
scale_fill_manual(values = c("blue", "purple", "red"))
# What does facet_wrap do?!
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
geom_density() +
scale_fill_manual(values = c("blue", "purple", "red")) +
facet_wrap(~ historical)
# Let's try a similar grouping strategy with a histogram instead of density plot.
# Why is this terrible?
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
geom_histogram(color = "white") +
scale_fill_manual(values = c("blue", "purple", "red"))
# Plot 1: adjust this to recreate the top plot
ggplot(elections, aes(x = historical)) +
geom_bar()
# Plot 2: adjust this to recreate the bottom plot
ggplot(elections, aes(x = winner_20)) +
geom_bar()
# A stacked bar plot
# How are the "historical" and "winner_20" variables mapped to the plot, i.e. what roles do they play?
ggplot(elections, aes(x = historical, fill = winner_20)) +
geom_bar()
# A faceted bar plot
ggplot(elections, aes(x = winner_20)) +
geom_bar() +
facet_wrap(~ historical)
# A side-by-side bar plot
# Note the new argument to geom_bar
ggplot(elections, aes(x = historical, fill = winner_20)) +
geom_bar(position = "dodge")
# A proportional bar plot
# Note the new argument to geom_bar
ggplot(elections, aes(x = historical, fill = winner_20)) +
geom_bar(position = "fill")
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv")
# How do 3pm temperatures (temp3pm) differ by location?
ggplot(weather, aes(x = temp3pm, fill = location)) +
geom_density(alpha = 0.5)
# How do 3pm temperatures (temp3pm) differ by location?
ggplot(weather, aes(x = temp3pm, fill = location)) +
geom_density(alpha = 0.5)
ggplot(weather, aes(y = temp3pm, x = location)) +
geom_boxplot()
# How might we predict the 3pm temperature (temp3pm) by the 9am temperature (temp9am)?
ggplot(weather, aes(y = temp3pm, x = temp9am)) +
geom_point()
# How do the number of rainy days (raintoday) differ by location?
ggplot(weather, aes(x = location, fill = raintoday)) +
geom_bar()
ggplot(elections, aes(x = repub_pct_20, fill = state_abbr)) +
geom_density(alpha = 0.5)
ggplot(elections, aes(x = repub_pct_20)) +
geom_density(alpha = 0.5) +
facet_wrap(~ state_abbr)
# Install ggridges package
library(ggridges)
# Make our first joy plot
# THINK: What DON'T you like about this?
ggplot(elections, aes(x = repub_pct_20, y = state_abbr)) +
geom_density_ridges()
# Let's put the states in order by Republican support, not alphabet
# How do you think fct_reorder works? We'll learn about this later in the semester.
ggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) +
geom_density_ridges(alpha = 0.5)
# YOUR TURN: color/fill the ridges according to a state's historical voting patterns
# and add meaningful axis labels
ggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20), fill = historical)) +
geom_density_ridges(alpha = 0.5) +
labs(y = "state", x = "2020 Republican support (%)") +
scale_fill_manual(values = c("blue", "purple", "red"))
elections_by_state <- read.csv("https://mac-stat.github.io/data/election_2020_by_state.csv")
ggplot(elections_by_state, aes(y = repub_pct_20, x = repub_pct_16)) +
geom_point()
# YOU TRY
# Start by creating a "scatterplot" of state_abbr (y-axis) by 2020 Republican support on the x-axis
# Color the points red
# Scroll to solutions below when you're ready
# Check it out
ggplot(elections_by_state, aes(x = repub_pct_20, y = state_abbr)) +
geom_point(color = "red")
# YOU TRY
# Reorder the states in terms of their 2020 Republican support (not alphabet)
# Scroll to solutions below when you're ready
# Check it out
ggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) +
geom_point(color = "red")
# Finally, add ANOTHER layer of points for the 2016 outcomes
# What info does this new geom_point() layer need to run?
ggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) +
geom_point(color = "red") +
geom_point(aes(x = repub_pct_16, y = state_abbr))
# YOUR TURN: color/fill the ridges according to a state's historical voting patterns
# and add meaningful axis labels
ggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20), fill = historical)) +
geom_density_ridges(alpha = 0.5) +
labs(y = "state", x = "2020 Republican support (%)") +
scale_fill_manual(values = c("blue", "purple", "red"))
library(geom_density_ridges)
?geom_density_ridges
# YOUR TURN: color/fill the ridges according to a state's historical voting patterns
# and add meaningful axis labels
ggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20), fill = historical)) +
geom_density (alpha = 0.5) +
labs(y = "state", x = "2020 Republican support (%)") +
scale_fill_manual(values = c("blue", "purple", "red"))
# YOUR TURN: color/fill the ridges according to a state's historical voting patterns
# and add meaningful axis labels
ggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20), fill = historical)) +
geom_density_ridges (alpha = 0.5) +
labs(y = "state", x = "2020 Republican support (%)") +
scale_fill_manual(values = c("blue", "purple", "red"))
library(tidyverse)
# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |>
mutate(date = as.Date(date))
# Check out the first 6 rows
# What are the units of observation?
# How many data points do we have?
# What type of variables do we have?
library(tidyverse)
# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |>
mutate(date = as.Date(date))
# Check out the first 6 rows
nrow(6)
# What are the units of observation?
# How many data points do we have?
# What type of variables do we have?
library(tidyverse)
# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |>
mutate(date = as.Date(date))
# Check out the first 6 rows
nrow(weather)
# What are the units of observation?
# How many data points do we have?
# What type of variables do we have?
library(tidyverse)
# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |>
mutate(date = as.Date(date))
# Check out the first 6 rows
nrow(weather)
head(6, weather)
library(tidyverse)
# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |>
mutate(date = as.Date(date))
# Check out the first 6 rows
nrow(weather)
head(6)
# What are the units of observation?
# How many data points do we have?
# What type of variables do we have?
?head
library(tidyverse)
# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |>
mutate(date = as.Date(date))
# Check out the first 6 rows
nrow(weather)
head(weather, 6)
# What are the units of observation?
# How many data points do we have?
# What type of variables do we have?
library(tidyverse)
# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |>
mutate(date = as.Date(date))
# Check out the first 6 rows
nrow(weather)
head(weather)
# What are the units of observation?
# How many data points do we have?
# What type of variables do we have?
library(tidyverse)
# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |>
mutate(date = as.Date(date))
# Check out the first 6 rows
head(weather)
# What are the units of observation?
# 24 variables
# How many data points do we have?
nrow(weather)
# What type of variables do we have?
str(weather)
ggplot(weather, aes(x = temp3pm)) + geom_density()
# Plot 1 (no facets & starting from a density plot of temp3pm)
ggplot(weather, aes(x = temp3pm, fill = location)) +
geom_density(alpha = 0.6)
# Plot 2 (no facets or densities)
ggplot(weather, aes(y = temp3pm, x = location)) +
geom_boxplot()
# Plot 3 (facets)
ggplot(weather, aes(x = temp3pm, fill = location)) +
geom_density(alpha = 0.5) +
facet_wrap(~ location)
# Don't worry about the syntax (we'll learn it soon)
woll <- weather |>
filter(location == "Wollongong") |>
mutate(date = as.Date(date))
# How often does it raintoday?
# Fill your geometric layer with the color blue.
ggplot(woll, aes(x = raintoday))
# How often does it raintoday?
# Fill your geometric layer with the color blue.
ggplot(woll, aes(x = raintoday)) + geom_bar(fill = "blue")
# If it does raintoday, what does this tell us about raintomorrow?
# Use your intuition first
ggplot(woll, aes(x = raintoday))
# If it does raintoday, what does this tell us about raintomorrow?
# Use your intuition first
ggplot(woll, aes(x = raintoday, y = raintomorrow)) + geom_bar()
# If it does raintoday, what does this tell us about raintomorrow?
# Use your intuition first
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) + geom_bar()
# Now compare different approaches
# Default: stacked bars
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) +
geom_bar()
library(tidyverse)
# Import data
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv") |>
mutate(date = as.Date(date))
# Check out the first 6 rows
head(weather)
# What are the units of observation?
# 24 variables
# How many data points do we have?
nrow(weather)
# What type of variables do we have?
str(weather)
# Now compare different approaches
# Default: stacked bars
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) +
geom_bar()
# Don't worry about the syntax (we'll learn it soon)
woll <- weather |>
filter(location == "Wollongong") |>
mutate(date = as.Date(date))
# Now compare different approaches
# Default: stacked bars
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) +
geom_bar()
# Side-by-side bars
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) +
geom_bar(position = "dodge")
# Proportional bars
# position = "fill" refers to filling the frame, nothing to do with the color-related fill
ggplot(woll, aes(x = raintoday, fill = raintomorrow)) +
geom_bar(position = "fill")
# THINK: What variable goes on the y-axis?
# For the curve, try adding span = 0.5 to tweak the curvature
ggplot(woll, aes(y = temp3pm, x = date)) +
geom_point() +
geom_smooth(span = 0.5)
# Instead of a curve that captures the general TREND,
# draw a line that illustrates the movement of RAW temperatures from day to day
# NOTE: We haven't learned this geom yet! Guess.
ggplot(woll, aes(y = temp3pm, x = date)) + gemo_line()
# Instead of a curve that captures the general TREND,
# draw a line that illustrates the movement of RAW temperatures from day to day
# NOTE: We haven't learned this geom yet! Guess.
ggplot(woll, aes(y = temp3pm, x = date)) + geom_line()
