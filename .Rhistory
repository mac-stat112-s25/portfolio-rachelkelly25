leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>  # Adds interactive labels and popups
setView(lng = mean(favorite_stp$longitude), lat = mean(favorite_stp$latitude), zoom = 12) |>
addControl(
html = "<strong>Favorite Stops Map</strong><br>A map showing favorite stops with markers.",
position = "topright"
) |>
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Stops",
colors = "blue"
)
leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>  # Adds interactive labels and popups
setView(lng = mean(favorite_stp$longitude), lat = mean(favorite_stp$latitude), zoom = 12) |>
addControl(
html = "<strong>Favorite Stops Map</strong><br>A map showing favorite stops with markers.",
position = "topright"
) |>
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Stops",
colors = "blue"
)
leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>  # Adds interactive labels and popups
setView(long = mean(favorite_stp$longitude), lat = mean(favorite_stp$latitude), zoom = 12) |>
addControl(
html = "<strong>Favorite Stops Map</strong><br>A map showing favorite stops with markers.",
position = "topright"
) |>
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Places",
colors = "blue"
)
leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>  # Adds interactive labels and popups
setView(lng = mean(favorite_stp$longitude), lat = mean(favorite_stp$latitude), zoom = 12) |>
addControl(
html = "<strong>Favorite Stops Map</strong><br>A map showing favorite stops with markers.",
position = "topright"
) |>
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Places",
colors = "blue"
)
leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>  # Adds interactive labels and popups
setView(lng = mean(favorite_stp$longitude), lat = mean(favorite_stp$latitude), zoom = 12) |>
addControl(
html = "<strong>Favorite Stops Map</strong><br>A map showing favorite stops with markers.",
position = "topright"
) |>
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Places",
colors = "blue"
)
head(favorite_stp)
leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>  # Adds interactive labels and popups
setView(lng = mean(favorite_stp$longitude), lat = mean(favorite_stp$latitude), zoom = 12) |>
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Places",
colors = "blue"
)
head(favorite_stp)
leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>  # Adds interactive labels and popups
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Places",
colors = "blue"
)
head(favorite_stp)
leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Places",
colors = "blue"
)
leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>
addControl(
html = "<h2 style='font-family: Arial; text-align: center; color: #333;'>Favorite Stops Map</h2>",
position = "topleft"
) |>
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Places",
colors = "blue"
)
leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>
addControl(
html = "<h2 style='font-family: Arial; text-align: center; color: #333;'>Rachel's Favorite Places Map</h2>",
position = "topleft"
) |>
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Places",
colors = "blue"
)
leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>
addControl(
html = "<h2 style='font-family: Times New Roman; text-align: center; color: #333;'>Rachel's Favorite Places Map</h2>",
position = "topleft"
) |>
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Places",
colors = "blue")
leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>
addControl(
html = "<h2 style='font-family: Times New Roman; text-align: center; color: #222;'>Rachel's Favorite Places Map</h2>",
position = "topleft"
) |>
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Places",
colors = "blue")
leaflet(data = favorite_stp) |>
addTiles() |>
addMarkers(popup = ~place, label = ~place) |>
addControl(
html = "<h2 style='font-family: Times New Roman; text-align: center; color: purple;'>Rachel's Favorite Places Map</h2>",
position = "topleft"
) |>
addLegend(
position = "bottomright",
title = "Legend",
labels = "Favorite Places",
colors = "blue")
# Import and check out data
education <- read.csv("https://mac-stat.github.io/data/sat.csv")
head(education)
library(tidyverse)
library(ggplot2)
ggplot(education, aes(x = expend, y = sat, color = fracCat)) +
geom_point(alpha = 0.5)
ggplot(education, aes(x = expend, y = sat, color = fracCat)) +
geom_point(alpha = 0.5) + geom_smooth()
ggplot(education, aes(x = expend, y = sat, color = fracCat)) +
geom_point(alpha = 0.5) +
labs(
title = "Relationship Between Educational Expenditure and SAT Scores",
x = "Per-Student Expenditure (in USD)",
y = "Average SAT Score",
color = "Fraction Category",
caption = "Data Source: [Insert Data Source Here]",
alt = "A scatter plot showing the relationship between per-student expenditure and SAT scores, with points colored by fraction category."
) +
scale_color_viridis_d(option = "plasma") +  # Improves accessibility
theme_minimal()
ggplot(education, aes(x = expend, y = sat, color = fracCat)) +
geom_point(alpha = 0.5) +
labs(
title = "Relationship Between Educational Expenditure and SAT Scores",
x = "Per-Student Expenditure (in USD)",
y = "Average SAT Score",
color = "Fraction Category",
caption = "Data Source: https://mac-stat.github.io/data/sat.csv",
alt = "A scatter plot showing the relationship between per-student expenditure and SAT scores, with points colored by fraction category."
) +
scale_color_viridis_d(option = "plasma") +
theme_minimal()
ggplot(education, aes(x = expend, y = sat, color = fracCat)) +
geom_point(alpha = 0.5) +
geom_smooth(se = TRUE, method = "loess") +
labs(
title = "Educational Expenditure vs. SAT Scores with Trend Line",
x = "Per-Student Expenditure (in USD)",
y = "Average SAT Score",
color = "Fraction Category",
caption = "Data Source: https://mac-stat.github.io/data/sat.csv",
alt = "A scatter plot with a trend line showing the relationship between per-student expenditure and SAT scores. A smooth line with a shaded confidence interval represents the trend."
) +
scale_color_viridis_d(option = "plasma") +
theme_minimal()
# Create the new_bechdel dataset
# Don't worry about the code. We'll learn this in the next unit!
data(bechdel)
new_bechdel <- bechdel |>
mutate(clean_test = factor(clean_test, c("nowomen", "notalk", "men", "dubious", "ok"))) |>
mutate(half_decades = cut(year, breaks = seq(1969, 2014, by = 5)))
library(tidyverse)
library(mosaic)
library(fivethirtyeight)
# Create the daily_births dataset
# Don't worry about the code. We'll learn this in the next unit!
data("Birthdays")
daily_births <- Birthdays |>
group_by(date) |>
summarize(births = sum(births)) |>
mutate(year = year(date),
month = month(date, label = TRUE),
day_of_month = mday(date),
day_of_week = wday(date, label = TRUE))
# Create the daily_births dataset
# Don't worry about the code. We'll learn this in the next unit!
data("Birthdays")
daily_births <- Birthdays |>
group_by(date) |>
summarize(births = sum(births)) |>
mutate(year = year(date),
month = month(date, label = TRUE),
day_of_month = mday(date),
day_of_week = wday(date, label = TRUE))
# Create the daily_births dataset
# Don't worry about the code. We'll learn this in the next unit!
data("Birthdays")
daily_births <- Birthdays |>
group_by(date) |>
summarize(births = sum(births)) |>
mutate(year = year(date),
month = month(date, label = TRUE),
day_of_month = mday(date),
day_of_week = wday(date, label = TRUE))
library(tidyverse)
library(mosaic)
library(mosaicData)
library(fivethirtyeight)
# Create the daily_births dataset
# Don't worry about the code. We'll learn this in the next unit!
data("Birthdays")
daily_births <- Birthdays |>
group_by(date) |>
summarize(births = sum(births)) |>
mutate(year = year(date),
month = month(date, label = TRUE),
day_of_month = mday(date),
day_of_week = wday(date, label = TRUE))
View(daily_births)
ggplot(daily_births, aes(x = year, y = births, color = day_of_week)) +
geom_line() +
facet_wrap(~ month) +  # Facet by birth month
labs(
title = "Yearly Birth Trends by Month and Day of the Week",
x = "Year",
y = "Number of Births",
color = "Day of the Week",
caption = "Data Source: [Insert Data Source Here]",
alt = ""
) +
scale_color_viridis_d(option = "plasma") +  # Colorblind-friendly palette
theme_minimal()
ggplot(daily_births, aes(x = month, y = day_of_week, fill = births)) +
geom_tile() +
facet_wrap(~ year) +  # Facet by year
labs(
title = "Heatmap of Births by Month and Day of the Week",
x = "Birth Month",
y = "Day of the Week",
fill = "Number of Births",
caption = "Data Source: [Insert Data Source Here]"
) +
scale_fill_viridis_c() +  # Improves accessibility
theme_minimal()
ggplot(daily_births, aes(x = month, y = day_of_week, fill = births)) +
geom_tile() +
facet_wrap(~ year) +
labs(
title = "Heatmap of Births by Month and Day of the Week",
x = "Birth Month",
y = "Day of the Week",
fill = "Number of Births",
caption = "Data Source: [Insert Data Source Here]"
) +
scale_fill_viridis_c() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)
ggplot(daily_births, aes(x = month, y = day_of_week, fill = births)) +
geom_tile() +
facet_wrap(~ year) +
labs(
title = "Heatmap of Births by Month and Day of the Week",
x = "Birth Month",
y = "Day of the Week",
fill = "Number of Births",
caption = "Data Source: [Insert Data Source Here]"
) +
scale_fill_viridis_c() +
theme_minimal()
ggplot(daily_births, aes(x = month, y = day_of_week, fill = births)) +
geom_tile() +
facet_wrap(~ year) +
labs(
title = "Heatmap of Births by Month and Day of the Week",
x = "Birth Month",
y = "Day of the Week",
fill = "Number of Births",
caption = "Data Source: [Insert Data Source Here]"
) +
scale_fill_viridis_c() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)
ggplot(daily_births, aes(x = year, y = births, color = day_of_week)) +
geom_line() +
facet_wrap(~ month) +  # Facet by birth month
labs(
title = "Yearly Birth Trends by Month and Day of the Week",
x = "Year",
y = "Number of Births",
color = "Day of the Week",
caption = "Data Source: [Insert Data Source Here]",
alt = ""
) +
scale_color_viridis_d(option = "plasma") +  # Colorblind-friendly palette
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)
ggplot(daily_births, aes(x = year, y = births, color = day_of_week)) +
geom_line() +
facet_wrap(~ month) +  # Facet by birth month
labs(
title = "Yearly Birth Trends by Month and Day of the Week",
x = "Year",
y = "Number of Births",
color = "Day of the Week",
caption = "Data Source: [Insert Data Source Here]",
alt = ""
) +
scale_color_viridis_d(option = "plasma") +  # Colorblind-friendly palette
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(daily_births, aes(x = month, y = day_of_week, fill = births)) +
geom_tile() +
facet_wrap(~ year) +
labs(
title = "Heatmap of Births by Month and Day of the Week",
x = "Birth Month",
y = "Day of the Week",
fill = "Number of Births",
caption = "Data Source: [Insert Data Source Here]"
) +
scale_fill_viridis_c() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(daily_births, aes(x = month, y = day_of_week, fill = births)) +
geom_tile() +
facet_wrap(~ year) +
labs(
title = "Heatmap of Births by Month and Day of the Week",
x = "Birth Month",
y = "Day of the Week",
fill = "Number of Births",
caption = "Data Source: [Insert Data Source Here]"
) +
scale_fill_viridis_c() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = .5))
ggplot(daily_births, aes(x = month, y = day_of_week, fill = births)) +
geom_tile() +
facet_wrap(~ year) +
labs(
title = "Heatmap of Births by Month and Day of the Week",
x = "Birth Month",
y = "Day of the Week",
fill = "Number of Births",
caption = "Data Source: [Insert Data Source Here]"
) +
scale_fill_viridis_c() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = .2))
ggplot(daily_births, aes(x = month, y = day_of_week, fill = births)) +
geom_tile() +
facet_wrap(~ year) +
labs(
title = "Heatmap of Births by Month and Day of the Week",
x = "Birth Month",
y = "Day of the Week",
fill = "Number of Births",
caption = "Data Source: [Insert Data Source Here]"
) +
scale_fill_viridis_c() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(daily_births, aes(x = year, y = births, color = day_of_week)) +
geom_line() +
facet_wrap(~ month) +  # Facet by birth month
labs(
title = "Yearly Birth Trends by Month and Day of the Week",
x = "Year",
y = "Number of Births",
color = "Day of the Week",
caption = "Data Source: Mosaic Data - Daily Births",
alt = ""
) +
scale_color_viridis_d(option = "plasma") +  # Colorblind-friendly palette
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(daily_births, aes(x = year, y = births, color = day_of_week)) +
geom_line() +
facet_wrap(~ month) +  # Facet by birth month
labs(
title = "Yearly Birth Trends by Month and Day of the Week",
x = "Year",
y = "Number of Births",
color = "Day of the Week",
caption = "Data Source: Mosaic Data - Daily Births",
alt = "A line plot showing the trend of births over the years, faceted by birth month. Each line represents a different day of the week, showing variations in births across different days."
) +
scale_color_viridis_d(option = "plasma") +  # Colorblind-friendly palette
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(daily_births, aes(x = year, y = births, color = day_of_week)) +
geom_line() +
facet_wrap(~ month) +
labs(
title = "Yearly Birth Trends by Month and Day of the Week",
x = "Year",
y = "Number of Births",
color = "Day of the Week",
caption = "Data Source: Mosaic Data - Daily Births",
alt = "A line plot showing the trend of daily births from 1970 to 1985, faceted by month. Each line represents a different day of the week, showing variations in births across different days.") +
scale_color_viridis_d() +  # Colorblind-friendly palette
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(daily_births, aes(x = year, y = births, color = day_of_week)) +
geom_line() +
facet_wrap(~ month) +
labs(
title = "Yearly Birth Trends by Month and Day of the Week",
x = "Year",
y = "Number of Births",
color = "Day of the Week",
caption = "Data Source: Mosaic Data - Daily Births",
alt = "A line plot showing the trend of daily births from 1970 to 1985, faceted by month. Each line represents a different day of the week, showing variations in births across different days.") +
scale_color_viridis_d(option = "plasma") +  # Colorblind-friendly palette
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(daily_births)
ggplot(daily_births, aes(x = year, y = births, color = day_of_week)) +
geom_line() +
facet_wrap(~ month) +
labs(
title = "Yearly Birth Trends by Month and Day of the Week",
x = "Year",
y = "Number of Births",
color = "Day of the Week",
caption = "Data Source: Mosaic Data - Daily Births",
alt = "A line plot showing the trend of daily births from 1969 to 1988, faceted by month. Each line represents a different day of the week, showing variations in births across different days.") +
scale_color_viridis_d(option = "plasma") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Load packaages
library("tibble")
library(ggplot2)
library(ggmap)
library(dplyr)
library(leaflet)
library("rnaturalearth")
library(ggrepel)
#Rachel's favorite places in the U.S. - used google maps for coordinates
favorite_stp <- tribble (
~place, ~long, ~lat, ~favorite,
"Macalester College", -93.1712321, 44.9378965, "no",
"Ramona California", -116.910632, 33.047826, "yes",
"Old Town San Diego", -117.196867, 32.754349, "no",
"Ototo", -104.980954, 39.689367, "yes",
"Portland Japanese Garden",-122.707993, 45.518796, "no",
"ABQ Golf Course", -106.618545, 35.098119, "yes",
"Boulder Hiking", -105.308957, 39.996407, "no",
"Lookout Mountain", -105.248476, 39.729449, "no",
"Mt Blue Sky", -105.641860, 39.587974, "no",
"Fern Canyon", -124.065181, 41.400873, "no")
library(tibble)  # Ensure tibble is loaded for rendering
library(tibble)  # Ensure tibble is loaded for rendering
install.packages("tibble")  # Ensure it's available in the bookdown/quarto environment
install.packages("tibble")
#Rachel's favorite places in the U.S. - used google maps for coordinates
favorite_stp <- tibble::tribble (
~place, ~long, ~lat, ~favorite,
"Macalester College", -93.1712321, 44.9378965, "no",
"Ramona California", -116.910632, 33.047826, "yes",
"Old Town San Diego", -117.196867, 32.754349, "no",
"Ototo", -104.980954, 39.689367, "yes",
"Portland Japanese Garden",-122.707993, 45.518796, "no",
"ABQ Golf Course", -106.618545, 35.098119, "yes",
"Boulder Hiking", -105.308957, 39.996407, "no",
"Lookout Mountain", -105.248476, 39.729449, "no",
"Mt Blue Sky", -105.641860, 39.587974, "no",
"Fern Canyon", -124.065181, 41.400873, "no")
