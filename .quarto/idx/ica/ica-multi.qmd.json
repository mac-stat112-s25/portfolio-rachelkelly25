{"title":"Mulivariate Viz","markdown":{"yaml":{"title":"Mulivariate Viz"},"headingText":"Review","containsRefs":false,"markdown":"\n\nUse this file for practice with the **mulivariate viz** in-class activity.  Refer to the class website for details.\n\n\nLet's review some *univariate* and *bivariate* plotting concepts using some daily weather data from Australia. This is a subset of the data from the `weatherAUS` data in the `rattle` package.\n\n```{r}\nlibrary(tidyverse)\n\n# Import data\nweather <- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |> \n  mutate(date = as.Date(date))  \n\n# Check out the first 6 rows\nhead(weather)\n\n# What are the units of observation?\n# 24 variables\n\n# How many data points do we have? \nnrow(weather)\n\n# What type of variables do we have?\nstr(weather)\n\n```\n\n### Example 1 {-}\n\nConstruct a plot that allows us to examine how `temp3pm` varies.\n\n```{r}\nggplot(weather, aes(x = temp3pm)) + geom_density()\n```\n\n\n\n### Example 2 {-}\n\nConstruct 3 plots that address the following research question:\n\nHow do afternoon temperatures (`temp3pm`) differ by `location`?\n\n```{r}\n# Plot 1 (no facets & starting from a density plot of temp3pm)\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.6)\n```\n\n```{r}\n# Plot 2 (no facets or densities)\nggplot(weather, aes(y = temp3pm, x = location)) + \n  geom_boxplot()\n\n```\n\n```{r}\n# Plot 3 (facets)\n\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5) + \n  facet_wrap(~ location)\n\n```\n\n\n\n#### Reflection {-}\n\n-   Temperatures tend to be highest, and most variable, in Uluru. There, they range from \\~10 to \\~45 with a typical temp around \\~30 degrees.\n-   Temperatures tend to be lowest in Hobart. There, they range from \\~5 to \\~45 with a typical temp around \\~15 degrees.\n-   Wollongong temps are in between and are the least variable from day to day.\n\n\n**SUBTLETIES: Defining `fill` or `color` by a variable**\n\nHow we define the `fill` or `color` depends upon whether we're defining it by a named color or by some variable in our dataset. For example:\n\n-   `geom___(fill = \"blue\")` \\\n    *named* colors are defined outside the `aes`thetics and put in quotes\n\n-   `geom___(aes(fill = variable))` or `ggplot(___, aes(fill = variable))` \\\ncolors/fills defined by a *variable* are defined inside the `aes`thetics\n\n\n### Example 3 {-}\n\nLet's consider Wollongong alone:\n\n```{r}\n# Don't worry about the syntax (we'll learn it soon)\nwoll <- weather |>\n  filter(location == \"Wollongong\") |> \n  mutate(date = as.Date(date))  \n```\n\n```{r}\n# How often does it raintoday?\n# Fill your geometric layer with the color blue.\nggplot(woll, aes(x = raintoday)) + geom_bar(fill = \"blue\")\n```\n\n```{r}\n# If it does raintoday, what does this tell us about raintomorrow?\n# Use your intuition first\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + geom_bar()\n```\n\n\n```{r}\n# Now compare different approaches\n\n# Default: stacked bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n```\n\n```{r}\n# Side-by-side bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"dodge\")\n```\n\n```{r}\n# Proportional bars\n# position = \"fill\" refers to filling the frame, nothing to do with the color-related fill\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\")\n```\n\n\n#### Reflection {-}\n\nThere's often not one \"best plot\", but a *combination* of plots that provide a complete picture:\n\n-   The stacked and side-by-side bars reflect that on most days, it does *not* rain.\n-   The proportional / filled bars *lose* that information, but make it easier to compare proportions: it's more likely to rain tomorrow if it also rains today.\n\n\n\n### Example 4 {-}\n\nConstruct a plot that illustrates how 3pm temperatures (temp3pm) vary by `date` in Wollongong. Represent each day on the plot and use a curve/line to help highlight the trends.\n\n```{r}\n# THINK: What variable goes on the y-axis?\n# For the curve, try adding span = 0.5 to tweak the curvature\nggplot(woll, aes(y = temp3pm, x = date)) + \n  geom_point() + \n  geom_smooth(span = 0.5)\n\n```\n\n```{r}\n# Instead of a curve that captures the general TREND,\n# draw a line that illustrates the movement of RAW temperatures from day to day\n# NOTE: We haven't learned this geom yet! Guess.\nggplot(woll, aes(y = temp3pm, x = date)) + geom_line()\n```\n\n**NOTE:** A line plot isn't always appropriate! It can be useful in situations like this, when our data are chronological.\n\n\n#### Reflection {-}\n\nThere's a seasonal / cyclic behavior in temperatures -- they're highest in January (around 23 degrees) and lowest in July (around 16 degrees). There are also some outliers -- some abnormally hot and cold days.\n\n\n## New Stuff\n\nNext, let's consider the entire `weather` data for all 3 locations. The addition of `location` adds a 3rd variable into our research questions:\n\n-   How does the relationship between `raintoday` and `raintomorrow` vary by `location`?\n-   How does the behavior of `temp3pm` over `date` vary by `location`?\n-   And so on.\n\nThus far, we've focused on the following components of a plot:\n\n-   setting up a **frame**\n-   adding **layers** / geometric elements\n-   splitting the plot into **facets** for different groups / categories\n-   change the **theme**, e.g. axis labels, color, fill\n\nWe'll have to think about all of this, along with **scales**. Scales change the color, fill, size, shape, or other properties according to the levels of a new *variable*. This is different than just assigning scale by, for example, `color = \"blue\"`.\n\nWork on the examples below in your groups. Check in with your intuition! We'll then discuss as a group as relevant.\n\n\n### Example 5 {-}\n\n```{r}\n# Plot temp3pm vs temp9am\n# Change the code in order to indicate the location to which each data point corresponds\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point()\n```\n\n```{r}\n# Change the code in order to indicate the location to which each data point corresponds\n# AND identify the days on which it rained / didn't raintoday\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point() + facet_wrap(~raintoday)\n```\n\n```{r}\n# How many ways can you think to make that plot of temp3pm vs temp9am with info about location and rain?\n# Play around!\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location, shape = raintoday)) + \n  geom_point()\n\n```\n\n### Example 6 {-}\n\n```{r}\n# Change the code in order to construct a line plot of temp3pm vs date for each separate location (no points!)\nggplot(weather, aes(y = temp3pm, x = date, color = location)) + \n  geom_line()\n```\n\n\n### Example 7 {-}\n\n```{r}\n# Plot the relationship of raintomorrow & raintoday\n# Change the code in order to indicate this relationship by location\n\nggplot(weather, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\") + \n  facet_wrap(~ location)\n```\n\n\n::: \n\nThere's no end to the number and type of visualizations you *could* make. And it's important to not just throw spaghetti at the wall until something sticks. [FlowingData](http://flowingdata.com/2017/01/24/one-dataset-visualized-25-ways/) shows that one dataset can be visualized *many* ways, and makes good recommendations for data viz workflow, which we modify and build upon here:\n\n-   **Identify simple research questions.**\\\n    What do you want to understand about the variables or the relationships among them?\n\n-   **Start with the basics and work incrementally.**\n    -   Identify what variables you want to include in your plot and what structure these have (eg: categorical, quantitative, dates)\n    -   Start simply. Build a plot of just 1 of these variables, or the relationship between 2 of these variables.\n    -   Set up a plotting frame and add just **one geometric layer at a time**.\n    -   Start tweaking: add whatever new variables you want to examine,\n\n-   **Ask your plot questions.**\n    -   What questions *does* your plot answer? What questions are left *unanswered* by your plot?\n    -   What *new* questions does your plot spark / inspire?\n    -   Do you have the viz tools to answer these questions, or might you learn more?\n\n-   **Focus.**\\\n    Reporting a large number of visualizations can overwhelm the audience and obscure your conclusions. Instead, pick out a focused yet comprehensive set of visualizations.\n\n\n:::\n\n\n## Exercises (required)\n\n\n### The story {-}\n\nThough far from a perfect assessment of academic preparedness, SAT scores have historically been used as one measurement of a state's education system. The `education` dataset contains various education variables for each state:\n\n```{r}\n# Import and check out data\neducation <- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\nhead(education)\n```\n\nA codebook is provided by Danny Kaplan who also made these data accessible:\n\n![](https://mac-stat.github.io/images/112/SATcodebook.png)\n\n\n### Exercise 1: SAT scores {-}\n\n#### Part a {-}\n\nConstruct a plot of how the average `sat` scores vary from state to state. (Just use 1 variable -- `sat` not `State`!)\n\n```{r}\nggplot(education, aes(x = sat)) + \n  geom_density(fill = \"pink\")\n```\n\n#### Part b {-}\n\nSummarize your observations from the plot. Comment on the basics: range, typical outcomes, shape. (Any theories about what might explain this non-normal shape?)\n\nSAT scores are typically between 800 and 1100.\n\n### Exercise 2: SAT Scores vs Per Pupil Spending & SAT Scores vs Salaries {-}\n\nThe first question we'd like to answer is: Can the variability in `sat` scores from state to state be partially explained by how much a state spends on education, specifically its per pupil spending (`expend`) and typical teacher `salary`?\n\n#### Part a {-}\n\n```{r}\n# Construct a plot of sat vs expend\n# Include a \"best fit linear regression model\" (HINT: method = \"lm\")\nggplot(education, aes(y = sat, x = expend)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n```\n\n```{r}\n# Construct a plot of sat vs salary\n# Include a \"best fit linear regression model\" (HINT: method = \"lm\")\nggplot(education, aes(y = sat, x = salary)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n```\n\n#### Part b {-}\n\nWhat are the relationship trends between SAT scores and spending? Is there anything that surprises you?\n\nThe more money that is spent, the worse the SAT performance. This is surprising because one would assume that the more money means higher SAT performance.\n\n\n### Exercise 3: SAT Scores vs Per Pupil Spending *and* Teacher Salaries {-}\n\nConstruct *one* visualization of the relationship of `sat` with `salary` *and* `expend`. HINT: Start with just 2 variables and tweak that code to add the third variable. Try out a few things!\n\n```{r}\nggplot(education, aes(y = sat, x = salary, color = expend)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n\n\n### Exercise 4: Another way to Incorporate Scale {-}\n\nIt can be tough to distinguish color scales and size scales for quantitative variables. Another option is to *discretize* a quantitative variable, or basically cut it up into *categories*.\n\nConstruct the plot below. Check out the code and think about what's happening here. What happens if you change \"2\" to \"3\"?\n\n```{r eval = FALSE}\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n```\n\nDescribe the trivariate relationship between `sat`, `salary`, and `expend`.\nStates with lower salary and expenditures tend to see higher SAT scores. \n\n### Exercise 5: Finally an Explanation {-}\n\nIt's strange that SAT scores *seem* to decrease with spending. But we're leaving out an important variable from our analysis: the fraction of a state's students that actually take the SAT. The `fracCat` variable indicates this fraction: `low` (under 15% take the SAT), `medium` (15-45% take the SAT), and `high` (at least 45% take the SAT).\n\n#### Part a {-}\n\nBuild a univariate viz of `fracCat` to better understand how many states fall into each category.\n\n```{r}\nggplot(education, aes(x = fracCat)) + \n  geom_bar()\n```\n\n#### Part b {-}\n\nBuild 2 bivariate visualizations that demonstrate the relationship between `sat` and `fracCat`. What story does your graphic tell and why does this make contextual sense?\n\n```{r}\nggplot(education, aes(x = sat, fill = fracCat)) + \n  geom_density(alpha = 0.5)\n```\n\n#### Part c {-}\n\nMake a trivariate visualization that demonstrates the relationship of `sat` with `expend` AND `fracCat`. Highlight the differences in `fracCat` groups through color AND unique trend lines. What story does your graphic tell?\\\nDoes it still seem that SAT scores decrease as spending increases?\n\n```{r}\nggplot(education, aes(x = expend, y = sat, color = fracCat)) + \n  geom_point(alpha = 0.5)\n\nggplot(education, aes(x = expend, y = sat, color = fracCat)) + \n  geom_point(alpha = 0.5) + geom_smooth()\n```\n\n#### Part d {-}\n\nPutting all of this together, explain this example of **Simpson’s Paradox**. That is, why did it appear that SAT scores decrease as spending increases even though the *opposite* is true?\n\nStudent participation is linked to how much money is spent to support those students. Students in lower expenditure states self-select and do better on the SAT whereas increased funding means that more overall students take the SAT, decreasing the overall scores. \n\n## Exercises (optional)\n\n### Exercise 6: Heat Maps {-}\n\nAs usual, we've only just scratched the surface! There are lots of other data viz techniques for exploring multivariate relationships. Let's start with a **heat map**.\n\n#### Part a {-}\n\nRun the chunks below. Check out the code, but don't worry about every little detail! NOTES:\n\n-   This is *not* part of the `ggplot()` grammar, making it a bit complicated.\n-   If you're curious about what a line in the plot does, comment it out (`#`) and check out what happens!\n-   In the plot, for each state (row), each variable (column) is scaled to indicate whether the state has a relative high value (yellow), a relatively low value (purple), or something in between (blues/greens).\n-   You can also play with the color scheme. Type `?cm.colors` in the *console* to learn about various options.\n-   We'll improve the plot later, so don't spend too much time trying to learn something from this plot.\n\n```{r eval = FALSE, fig.width = 8, fig.height = 15}\n# Remove the \"State\" column and use it to label the rows\n# Then scale the variables\nplot_data <- education |> \n  column_to_rownames(\"State\") |> \n  data.matrix() |> \n  scale()\n\n# Load the gplots package needed for heatmaps\nlibrary(gplots)\n\n# Construct heatmap 1\nheatmap.2(plot_data,\n  dendrogram = \"none\",\n  Rowv = NA, \n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n```\n\n```{r eval = FALSE, fig.width = 8, fig.height = 15}\n# Construct heatmap 2\nheatmap.2(plot_data,\n  dendrogram = \"none\",\n  Rowv = TRUE,             ### WE CHANGED THIS FROM NA TO TRUE\n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n```\n\n```{r eval = FALSE, fig.width = 8, fig.height = 15}\n# Construct heatmap 3\nheatmap.2(plot_data,\n  dendrogram = \"row\",       ### WE CHANGED THIS FROM \"none\" TO \"row\"\n  Rowv = TRUE,            \n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n```\n\n#### Part b {-}\n\nIn the final two plots, the states (rows) are rearranged by similarity with respect to these education metrics. The *final* plot includes a **dendrogram** which further indicates *clusters* of similar states. In short, states that have a shorter path to connection are more similar than others.\n\nPutting this all together, what insight do you gain about the education trends across U.S. states? Which states are similar? In what ways are they similar? Are there any outliers with respect to 1 or more of the education metrics?\n\n\n\n### Exercise 7: Star plots {-}\n\nLike heat maps, star plots indicate the relative scale of each variable for each state. Thus, we can use star maps to identify similar groups of states, and unusual states!\n\n#### Part a {-}\n\nConstruct and check out the star plot below. Note that each state has a \"pie\", with each segment corresponding to a different variable. The larger a segment, the larger that variable's value is in that state. For example:\n\n-   Check out Minnesota. How does Minnesota's education metrics compare to those in other states? What metrics are relatively high? Relatively low?\n-   What states appear to be similar? Do these observations agree with those that you gained from the heat map?\n\n```{r eval = FALSE, fig.width = 10, fig.height = 20}\nstars(plot_data,\n  flip.labels = FALSE,\n  key.loc = c(10, 1.5),\n  cex = 1, \n  draw.segments = TRUE\n)\n```\n\n#### Part b {-}\n\nFinally, let's plot the state stars by *geographic* location! What new insight do you gain here?!\n\n```{r eval = FALSE, fig.width = 10, fig.height = 7}\nstars(plot_data,\n  flip.labels = FALSE,\n  locations = data.matrix(as.data.frame(state.center)),  # added external data to arrange by geo location\n  key.loc = c(-110, 28),\n  cex = 1, \n  draw.segments = TRUE\n)\n```\n\n\n## Solutions\n\n<details>\n\n<summary>Click for Solutions</summary>\n\n```{r}\nlibrary(tidyverse)\n\n# Import data\nweather <- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |> \n  mutate(date = as.Date(date))  \n\n# Check out the first 6 rows\n# What are the units of observation?\nhead(weather)\n\n# How many data points do we have? \nnrow(weather)\n\n# What type of variables do we have?\nstr(weather)\n```\n\n\n### Example 1 {-}\n\n```{r}\nggplot(weather, aes(x = temp3pm)) + \n  geom_density()\n```\n\n\n### Example 2 {-}\n\n```{r}\n# Plot 1 (no facets & starting from a density plot of temp3pm)\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5)\n```\n\n```{r}\n# Plot 2 (no facets or densities)\nggplot(weather, aes(y = temp3pm, x = location)) + \n  geom_boxplot()\n```\n\n```{r}\n# Plot 3 (facets)\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5) + \n  facet_wrap(~ location)\n```\n\n\n### Example 3 {-}\n\n```{r}\n# How often does it raintoday?\n# Fill your geometric layer with the color blue.\nggplot(woll, aes(x = raintoday)) + \n  geom_bar(fill = \"blue\")\n```\n\n```{r}\n# If it does raintoday, what does this tell us about raintomorrow?\n# Use your intuition first\nggplot(woll, aes(x = raintoday)) + \n  geom_bar(aes(fill = raintomorrow))\n\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n```\n\n```{r}\n# Now compare different approaches\n\n# Default: stacked bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n```\n\n```{r}\n# Side-by-side bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"dodge\")\n```\n\n```{r}\n# Proportional bars\n# position = \"fill\" refers to filling the frame, nothing to do with the color-related fill\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\")\n```\n\n### Example 4 {-}\n\n```{r}\n# THINK: What variable goes on the y-axis?\n# For the curve, try adding span = 0.5 to tweak the curvature\nggplot(woll, aes(y = temp3pm, x = date)) + \n  geom_point() + \n  geom_smooth(span = 0.5)\n```\n\n```{r}\n# Instead of a curve that captures the general TREND,\n# draw a line that illustrates the movement of RAW temperatures from day to day\n# NOTE: We haven't learned this geom yet! Guess.\nggplot(woll, aes(y = temp3pm, x = date)) + \n  geom_line()\n```\n\n### Example 5 {-}\n\n```{r}\n# Plot temp3pm vs temp9am\n# Change the code in order to indicate the location to which each data point corresponds\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point()\n```\n\n```{r}\n# Change the code in order to indicate the location to which each data point corresponds\n# AND identify the days on which it rained / didn't raintoday\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point() +\n  facet_wrap(~ raintoday)\n\n```\n\n```{r}\n# How many ways can you think to make that plot of temp3pm vs temp9am with info about location and rain?\n# Play around!\n\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location, shape = raintoday)) + \n  geom_point()\n```\n\n### Example 6 {-}\n\n```{r}\n# Change the code in order to construct a line plot of temp3pm vs date for each separate location (no points!)\nggplot(weather, aes(y = temp3pm, x = date, color = location)) + \n  geom_line()\n```\n\n### Example 7 {-}\n\n```{r}\n# Plot the relationship of raintomorrow & raintoday\n# Change the code in order to indicate this relationship by location\nggplot(weather, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\") + \n  facet_wrap(~ location)\n```\n\n\n### Exercise 1: SAT scores {-}\n\n#### Part a {-}\n\n```{r}\n# A histogram would work too!\nggplot(education, aes(x = sat)) + \n  geom_density()\n```\n\n#### Part b {-}\n\naverage SAT scores range from roughly 800 to 1100. They appear bi-modal.\n\n\n### Exercise 2: SAT Scores vs Per Pupil Spending & SAT Scores vs Salaries {-}\n\n#### Part a {-}\n\n```{r}\n# Construct a plot of sat vs expend\n# Include a \"best fit linear regression model\"\nggplot(education, aes(y = sat, x = expend)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n```{r}\n# Construct a plot of sat vs salary\n# Include a \"best fit linear regression model\"\nggplot(education, aes(y = sat, x = salary)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n#### Part b {-}\n\nThe higher the student expenditures and teacher salaries, the worse the SAT performance.\n\n\n### Exercise 3: SAT Scores vs Per Pupil Spending *and* Teacher Salaries {-}\n\n```{r}\nggplot(education, aes(y = sat, x = salary, color = expend)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n\n### Exercise 4: Another Way to Incorporate Scale {-}\n\n```{r}\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 3))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n```\n\nStates with lower salaries and expenditures tend to have higher SAT scores.\n\n\n### Exercise 5: Finally an Explanation {-}\n\n#### Part a {-}\n\n```{r}\nggplot(education, aes(x = fracCat)) + \n  geom_bar()\n```\n\n#### Part b {-}\n\nThe more students in a state that take the SAT, the lower the average scores tend to be. This is probably related to self-selection.\n\n```{r}\nggplot(education, aes(x = sat, fill = fracCat)) + \n  geom_density(alpha = 0.5)\n```\n\n#### Part c {-}\n\nWhen we control for the fraction of students that take the SAT, SAT scores *increase* with expenditure.\n\n```{r}\nggplot(education, aes(y = sat, x = expend, color = fracCat)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n#### Part d {-}\n\nStudent participation tends to be lower among states with lower expenditures (which are likely also the states with higher ed institutions that haven't historically required the SAT). Those same states tend to have higher SAT scores because of the self-selection of who participates.\n\n\n### Exercise 6: Heat Maps {-}\n\n#### Part a {-}\n\n```{r fig.width = 8, fig.height = 15}\n# Remove the \"State\" column and use it to label the rows\n# Then scale the variables\nplot_data <- education |> \n  column_to_rownames(\"State\") |> \n  data.matrix() |> \n  scale()\n\n# Load the gplots package needed for heatmaps\nlibrary(gplots)\n\n# Construct heatmap 1\nheatmap.2(plot_data,\n  dendrogram = \"none\",\n  Rowv = NA, \n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n```\n\n```{r fig.width = 8, fig.height = 15}\n# Construct heatmap 2\nheatmap.2(plot_data,\n  dendrogram = \"none\",\n  Rowv = TRUE,             ### WE CHANGED THIS FROM NA TO TRUE\n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n```\n\n```{r fig.width = 8, fig.height = 15}\n# Construct heatmap 3\nheatmap.2(plot_data,\n  dendrogram = \"row\",       ### WE CHANGED THIS FROM \"none\" TO \"row\"\n  Rowv = TRUE,            \n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n```\n\n#### Part b {-}\n\n-   Similar values in verbal, math, and sat.\n-   High contrast (an inverse relationship) verbal/math/sat scores and the fraction of students that take the SAT.\n-   Outliers of Utah and California in ratio (more students per teacher).\n-   While grouped, fraction and salary are not as similar to each other as the sat scores; it is also interesting to notice states that have high ratios have generally low expenditures per student.\n\n\n### Exercise 7: Star Plots {-}\n\n#### Part a {-}\n\nMN is high on the SAT performance related metrics and low on everything else. MN is similar to Iowa, Kansas, Mississippi, Missouri, the Dakotas...\n\n```{r fig.width = 10, fig.height = 20}\nstars(plot_data,\n  flip.labels = FALSE,\n  key.loc = c(10, 1.5),\n  cex = 1, \n  draw.segments = TRUE\n)\n```\n\n#### Part b {-}\n\nWhen the states are in geographical ordering, we'd notice more easily that states in similar regions of the U.S. have similar patterns of these variables.\n\n```{r fig.width = 10, fig.height = 10}\nstars(plot_data,\n  flip.labels = FALSE,\n  locations = data.matrix(as.data.frame(state.center)),  # added external data to arrange by geo location\n  key.loc = c(-110, 28),\n  cex = 1, \n  draw.segments = TRUE\n)\n```\n\n</details>\n","srcMarkdownNoYaml":"\n\nUse this file for practice with the **mulivariate viz** in-class activity.  Refer to the class website for details.\n\n## Review\n\nLet's review some *univariate* and *bivariate* plotting concepts using some daily weather data from Australia. This is a subset of the data from the `weatherAUS` data in the `rattle` package.\n\n```{r}\nlibrary(tidyverse)\n\n# Import data\nweather <- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |> \n  mutate(date = as.Date(date))  \n\n# Check out the first 6 rows\nhead(weather)\n\n# What are the units of observation?\n# 24 variables\n\n# How many data points do we have? \nnrow(weather)\n\n# What type of variables do we have?\nstr(weather)\n\n```\n\n### Example 1 {-}\n\nConstruct a plot that allows us to examine how `temp3pm` varies.\n\n```{r}\nggplot(weather, aes(x = temp3pm)) + geom_density()\n```\n\n\n\n### Example 2 {-}\n\nConstruct 3 plots that address the following research question:\n\nHow do afternoon temperatures (`temp3pm`) differ by `location`?\n\n```{r}\n# Plot 1 (no facets & starting from a density plot of temp3pm)\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.6)\n```\n\n```{r}\n# Plot 2 (no facets or densities)\nggplot(weather, aes(y = temp3pm, x = location)) + \n  geom_boxplot()\n\n```\n\n```{r}\n# Plot 3 (facets)\n\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5) + \n  facet_wrap(~ location)\n\n```\n\n\n\n#### Reflection {-}\n\n-   Temperatures tend to be highest, and most variable, in Uluru. There, they range from \\~10 to \\~45 with a typical temp around \\~30 degrees.\n-   Temperatures tend to be lowest in Hobart. There, they range from \\~5 to \\~45 with a typical temp around \\~15 degrees.\n-   Wollongong temps are in between and are the least variable from day to day.\n\n\n**SUBTLETIES: Defining `fill` or `color` by a variable**\n\nHow we define the `fill` or `color` depends upon whether we're defining it by a named color or by some variable in our dataset. For example:\n\n-   `geom___(fill = \"blue\")` \\\n    *named* colors are defined outside the `aes`thetics and put in quotes\n\n-   `geom___(aes(fill = variable))` or `ggplot(___, aes(fill = variable))` \\\ncolors/fills defined by a *variable* are defined inside the `aes`thetics\n\n\n### Example 3 {-}\n\nLet's consider Wollongong alone:\n\n```{r}\n# Don't worry about the syntax (we'll learn it soon)\nwoll <- weather |>\n  filter(location == \"Wollongong\") |> \n  mutate(date = as.Date(date))  \n```\n\n```{r}\n# How often does it raintoday?\n# Fill your geometric layer with the color blue.\nggplot(woll, aes(x = raintoday)) + geom_bar(fill = \"blue\")\n```\n\n```{r}\n# If it does raintoday, what does this tell us about raintomorrow?\n# Use your intuition first\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + geom_bar()\n```\n\n\n```{r}\n# Now compare different approaches\n\n# Default: stacked bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n```\n\n```{r}\n# Side-by-side bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"dodge\")\n```\n\n```{r}\n# Proportional bars\n# position = \"fill\" refers to filling the frame, nothing to do with the color-related fill\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\")\n```\n\n\n#### Reflection {-}\n\nThere's often not one \"best plot\", but a *combination* of plots that provide a complete picture:\n\n-   The stacked and side-by-side bars reflect that on most days, it does *not* rain.\n-   The proportional / filled bars *lose* that information, but make it easier to compare proportions: it's more likely to rain tomorrow if it also rains today.\n\n\n\n### Example 4 {-}\n\nConstruct a plot that illustrates how 3pm temperatures (temp3pm) vary by `date` in Wollongong. Represent each day on the plot and use a curve/line to help highlight the trends.\n\n```{r}\n# THINK: What variable goes on the y-axis?\n# For the curve, try adding span = 0.5 to tweak the curvature\nggplot(woll, aes(y = temp3pm, x = date)) + \n  geom_point() + \n  geom_smooth(span = 0.5)\n\n```\n\n```{r}\n# Instead of a curve that captures the general TREND,\n# draw a line that illustrates the movement of RAW temperatures from day to day\n# NOTE: We haven't learned this geom yet! Guess.\nggplot(woll, aes(y = temp3pm, x = date)) + geom_line()\n```\n\n**NOTE:** A line plot isn't always appropriate! It can be useful in situations like this, when our data are chronological.\n\n\n#### Reflection {-}\n\nThere's a seasonal / cyclic behavior in temperatures -- they're highest in January (around 23 degrees) and lowest in July (around 16 degrees). There are also some outliers -- some abnormally hot and cold days.\n\n\n## New Stuff\n\nNext, let's consider the entire `weather` data for all 3 locations. The addition of `location` adds a 3rd variable into our research questions:\n\n-   How does the relationship between `raintoday` and `raintomorrow` vary by `location`?\n-   How does the behavior of `temp3pm` over `date` vary by `location`?\n-   And so on.\n\nThus far, we've focused on the following components of a plot:\n\n-   setting up a **frame**\n-   adding **layers** / geometric elements\n-   splitting the plot into **facets** for different groups / categories\n-   change the **theme**, e.g. axis labels, color, fill\n\nWe'll have to think about all of this, along with **scales**. Scales change the color, fill, size, shape, or other properties according to the levels of a new *variable*. This is different than just assigning scale by, for example, `color = \"blue\"`.\n\nWork on the examples below in your groups. Check in with your intuition! We'll then discuss as a group as relevant.\n\n\n### Example 5 {-}\n\n```{r}\n# Plot temp3pm vs temp9am\n# Change the code in order to indicate the location to which each data point corresponds\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point()\n```\n\n```{r}\n# Change the code in order to indicate the location to which each data point corresponds\n# AND identify the days on which it rained / didn't raintoday\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point() + facet_wrap(~raintoday)\n```\n\n```{r}\n# How many ways can you think to make that plot of temp3pm vs temp9am with info about location and rain?\n# Play around!\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location, shape = raintoday)) + \n  geom_point()\n\n```\n\n### Example 6 {-}\n\n```{r}\n# Change the code in order to construct a line plot of temp3pm vs date for each separate location (no points!)\nggplot(weather, aes(y = temp3pm, x = date, color = location)) + \n  geom_line()\n```\n\n\n### Example 7 {-}\n\n```{r}\n# Plot the relationship of raintomorrow & raintoday\n# Change the code in order to indicate this relationship by location\n\nggplot(weather, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\") + \n  facet_wrap(~ location)\n```\n\n\n::: \n\nThere's no end to the number and type of visualizations you *could* make. And it's important to not just throw spaghetti at the wall until something sticks. [FlowingData](http://flowingdata.com/2017/01/24/one-dataset-visualized-25-ways/) shows that one dataset can be visualized *many* ways, and makes good recommendations for data viz workflow, which we modify and build upon here:\n\n-   **Identify simple research questions.**\\\n    What do you want to understand about the variables or the relationships among them?\n\n-   **Start with the basics and work incrementally.**\n    -   Identify what variables you want to include in your plot and what structure these have (eg: categorical, quantitative, dates)\n    -   Start simply. Build a plot of just 1 of these variables, or the relationship between 2 of these variables.\n    -   Set up a plotting frame and add just **one geometric layer at a time**.\n    -   Start tweaking: add whatever new variables you want to examine,\n\n-   **Ask your plot questions.**\n    -   What questions *does* your plot answer? What questions are left *unanswered* by your plot?\n    -   What *new* questions does your plot spark / inspire?\n    -   Do you have the viz tools to answer these questions, or might you learn more?\n\n-   **Focus.**\\\n    Reporting a large number of visualizations can overwhelm the audience and obscure your conclusions. Instead, pick out a focused yet comprehensive set of visualizations.\n\n\n:::\n\n\n## Exercises (required)\n\n\n### The story {-}\n\nThough far from a perfect assessment of academic preparedness, SAT scores have historically been used as one measurement of a state's education system. The `education` dataset contains various education variables for each state:\n\n```{r}\n# Import and check out data\neducation <- read.csv(\"https://mac-stat.github.io/data/sat.csv\")\nhead(education)\n```\n\nA codebook is provided by Danny Kaplan who also made these data accessible:\n\n![](https://mac-stat.github.io/images/112/SATcodebook.png)\n\n\n### Exercise 1: SAT scores {-}\n\n#### Part a {-}\n\nConstruct a plot of how the average `sat` scores vary from state to state. (Just use 1 variable -- `sat` not `State`!)\n\n```{r}\nggplot(education, aes(x = sat)) + \n  geom_density(fill = \"pink\")\n```\n\n#### Part b {-}\n\nSummarize your observations from the plot. Comment on the basics: range, typical outcomes, shape. (Any theories about what might explain this non-normal shape?)\n\nSAT scores are typically between 800 and 1100.\n\n### Exercise 2: SAT Scores vs Per Pupil Spending & SAT Scores vs Salaries {-}\n\nThe first question we'd like to answer is: Can the variability in `sat` scores from state to state be partially explained by how much a state spends on education, specifically its per pupil spending (`expend`) and typical teacher `salary`?\n\n#### Part a {-}\n\n```{r}\n# Construct a plot of sat vs expend\n# Include a \"best fit linear regression model\" (HINT: method = \"lm\")\nggplot(education, aes(y = sat, x = expend)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n```\n\n```{r}\n# Construct a plot of sat vs salary\n# Include a \"best fit linear regression model\" (HINT: method = \"lm\")\nggplot(education, aes(y = sat, x = salary)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n```\n\n#### Part b {-}\n\nWhat are the relationship trends between SAT scores and spending? Is there anything that surprises you?\n\nThe more money that is spent, the worse the SAT performance. This is surprising because one would assume that the more money means higher SAT performance.\n\n\n### Exercise 3: SAT Scores vs Per Pupil Spending *and* Teacher Salaries {-}\n\nConstruct *one* visualization of the relationship of `sat` with `salary` *and* `expend`. HINT: Start with just 2 variables and tweak that code to add the third variable. Try out a few things!\n\n```{r}\nggplot(education, aes(y = sat, x = salary, color = expend)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n\n\n### Exercise 4: Another way to Incorporate Scale {-}\n\nIt can be tough to distinguish color scales and size scales for quantitative variables. Another option is to *discretize* a quantitative variable, or basically cut it up into *categories*.\n\nConstruct the plot below. Check out the code and think about what's happening here. What happens if you change \"2\" to \"3\"?\n\n```{r eval = FALSE}\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n```\n\nDescribe the trivariate relationship between `sat`, `salary`, and `expend`.\nStates with lower salary and expenditures tend to see higher SAT scores. \n\n### Exercise 5: Finally an Explanation {-}\n\nIt's strange that SAT scores *seem* to decrease with spending. But we're leaving out an important variable from our analysis: the fraction of a state's students that actually take the SAT. The `fracCat` variable indicates this fraction: `low` (under 15% take the SAT), `medium` (15-45% take the SAT), and `high` (at least 45% take the SAT).\n\n#### Part a {-}\n\nBuild a univariate viz of `fracCat` to better understand how many states fall into each category.\n\n```{r}\nggplot(education, aes(x = fracCat)) + \n  geom_bar()\n```\n\n#### Part b {-}\n\nBuild 2 bivariate visualizations that demonstrate the relationship between `sat` and `fracCat`. What story does your graphic tell and why does this make contextual sense?\n\n```{r}\nggplot(education, aes(x = sat, fill = fracCat)) + \n  geom_density(alpha = 0.5)\n```\n\n#### Part c {-}\n\nMake a trivariate visualization that demonstrates the relationship of `sat` with `expend` AND `fracCat`. Highlight the differences in `fracCat` groups through color AND unique trend lines. What story does your graphic tell?\\\nDoes it still seem that SAT scores decrease as spending increases?\n\n```{r}\nggplot(education, aes(x = expend, y = sat, color = fracCat)) + \n  geom_point(alpha = 0.5)\n\nggplot(education, aes(x = expend, y = sat, color = fracCat)) + \n  geom_point(alpha = 0.5) + geom_smooth()\n```\n\n#### Part d {-}\n\nPutting all of this together, explain this example of **Simpson’s Paradox**. That is, why did it appear that SAT scores decrease as spending increases even though the *opposite* is true?\n\nStudent participation is linked to how much money is spent to support those students. Students in lower expenditure states self-select and do better on the SAT whereas increased funding means that more overall students take the SAT, decreasing the overall scores. \n\n## Exercises (optional)\n\n### Exercise 6: Heat Maps {-}\n\nAs usual, we've only just scratched the surface! There are lots of other data viz techniques for exploring multivariate relationships. Let's start with a **heat map**.\n\n#### Part a {-}\n\nRun the chunks below. Check out the code, but don't worry about every little detail! NOTES:\n\n-   This is *not* part of the `ggplot()` grammar, making it a bit complicated.\n-   If you're curious about what a line in the plot does, comment it out (`#`) and check out what happens!\n-   In the plot, for each state (row), each variable (column) is scaled to indicate whether the state has a relative high value (yellow), a relatively low value (purple), or something in between (blues/greens).\n-   You can also play with the color scheme. Type `?cm.colors` in the *console* to learn about various options.\n-   We'll improve the plot later, so don't spend too much time trying to learn something from this plot.\n\n```{r eval = FALSE, fig.width = 8, fig.height = 15}\n# Remove the \"State\" column and use it to label the rows\n# Then scale the variables\nplot_data <- education |> \n  column_to_rownames(\"State\") |> \n  data.matrix() |> \n  scale()\n\n# Load the gplots package needed for heatmaps\nlibrary(gplots)\n\n# Construct heatmap 1\nheatmap.2(plot_data,\n  dendrogram = \"none\",\n  Rowv = NA, \n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n```\n\n```{r eval = FALSE, fig.width = 8, fig.height = 15}\n# Construct heatmap 2\nheatmap.2(plot_data,\n  dendrogram = \"none\",\n  Rowv = TRUE,             ### WE CHANGED THIS FROM NA TO TRUE\n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n```\n\n```{r eval = FALSE, fig.width = 8, fig.height = 15}\n# Construct heatmap 3\nheatmap.2(plot_data,\n  dendrogram = \"row\",       ### WE CHANGED THIS FROM \"none\" TO \"row\"\n  Rowv = TRUE,            \n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n```\n\n#### Part b {-}\n\nIn the final two plots, the states (rows) are rearranged by similarity with respect to these education metrics. The *final* plot includes a **dendrogram** which further indicates *clusters* of similar states. In short, states that have a shorter path to connection are more similar than others.\n\nPutting this all together, what insight do you gain about the education trends across U.S. states? Which states are similar? In what ways are they similar? Are there any outliers with respect to 1 or more of the education metrics?\n\n\n\n### Exercise 7: Star plots {-}\n\nLike heat maps, star plots indicate the relative scale of each variable for each state. Thus, we can use star maps to identify similar groups of states, and unusual states!\n\n#### Part a {-}\n\nConstruct and check out the star plot below. Note that each state has a \"pie\", with each segment corresponding to a different variable. The larger a segment, the larger that variable's value is in that state. For example:\n\n-   Check out Minnesota. How does Minnesota's education metrics compare to those in other states? What metrics are relatively high? Relatively low?\n-   What states appear to be similar? Do these observations agree with those that you gained from the heat map?\n\n```{r eval = FALSE, fig.width = 10, fig.height = 20}\nstars(plot_data,\n  flip.labels = FALSE,\n  key.loc = c(10, 1.5),\n  cex = 1, \n  draw.segments = TRUE\n)\n```\n\n#### Part b {-}\n\nFinally, let's plot the state stars by *geographic* location! What new insight do you gain here?!\n\n```{r eval = FALSE, fig.width = 10, fig.height = 7}\nstars(plot_data,\n  flip.labels = FALSE,\n  locations = data.matrix(as.data.frame(state.center)),  # added external data to arrange by geo location\n  key.loc = c(-110, 28),\n  cex = 1, \n  draw.segments = TRUE\n)\n```\n\n\n## Solutions\n\n<details>\n\n<summary>Click for Solutions</summary>\n\n```{r}\nlibrary(tidyverse)\n\n# Import data\nweather <- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\") |> \n  mutate(date = as.Date(date))  \n\n# Check out the first 6 rows\n# What are the units of observation?\nhead(weather)\n\n# How many data points do we have? \nnrow(weather)\n\n# What type of variables do we have?\nstr(weather)\n```\n\n\n### Example 1 {-}\n\n```{r}\nggplot(weather, aes(x = temp3pm)) + \n  geom_density()\n```\n\n\n### Example 2 {-}\n\n```{r}\n# Plot 1 (no facets & starting from a density plot of temp3pm)\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5)\n```\n\n```{r}\n# Plot 2 (no facets or densities)\nggplot(weather, aes(y = temp3pm, x = location)) + \n  geom_boxplot()\n```\n\n```{r}\n# Plot 3 (facets)\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5) + \n  facet_wrap(~ location)\n```\n\n\n### Example 3 {-}\n\n```{r}\n# How often does it raintoday?\n# Fill your geometric layer with the color blue.\nggplot(woll, aes(x = raintoday)) + \n  geom_bar(fill = \"blue\")\n```\n\n```{r}\n# If it does raintoday, what does this tell us about raintomorrow?\n# Use your intuition first\nggplot(woll, aes(x = raintoday)) + \n  geom_bar(aes(fill = raintomorrow))\n\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n```\n\n```{r}\n# Now compare different approaches\n\n# Default: stacked bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar()\n```\n\n```{r}\n# Side-by-side bars\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"dodge\")\n```\n\n```{r}\n# Proportional bars\n# position = \"fill\" refers to filling the frame, nothing to do with the color-related fill\nggplot(woll, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\")\n```\n\n### Example 4 {-}\n\n```{r}\n# THINK: What variable goes on the y-axis?\n# For the curve, try adding span = 0.5 to tweak the curvature\nggplot(woll, aes(y = temp3pm, x = date)) + \n  geom_point() + \n  geom_smooth(span = 0.5)\n```\n\n```{r}\n# Instead of a curve that captures the general TREND,\n# draw a line that illustrates the movement of RAW temperatures from day to day\n# NOTE: We haven't learned this geom yet! Guess.\nggplot(woll, aes(y = temp3pm, x = date)) + \n  geom_line()\n```\n\n### Example 5 {-}\n\n```{r}\n# Plot temp3pm vs temp9am\n# Change the code in order to indicate the location to which each data point corresponds\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point()\n```\n\n```{r}\n# Change the code in order to indicate the location to which each data point corresponds\n# AND identify the days on which it rained / didn't raintoday\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location)) + \n  geom_point() +\n  facet_wrap(~ raintoday)\n\n```\n\n```{r}\n# How many ways can you think to make that plot of temp3pm vs temp9am with info about location and rain?\n# Play around!\n\nggplot(weather, aes(y = temp3pm, x = temp9am, color = location, shape = raintoday)) + \n  geom_point()\n```\n\n### Example 6 {-}\n\n```{r}\n# Change the code in order to construct a line plot of temp3pm vs date for each separate location (no points!)\nggplot(weather, aes(y = temp3pm, x = date, color = location)) + \n  geom_line()\n```\n\n### Example 7 {-}\n\n```{r}\n# Plot the relationship of raintomorrow & raintoday\n# Change the code in order to indicate this relationship by location\nggplot(weather, aes(x = raintoday, fill = raintomorrow)) + \n  geom_bar(position = \"fill\") + \n  facet_wrap(~ location)\n```\n\n\n### Exercise 1: SAT scores {-}\n\n#### Part a {-}\n\n```{r}\n# A histogram would work too!\nggplot(education, aes(x = sat)) + \n  geom_density()\n```\n\n#### Part b {-}\n\naverage SAT scores range from roughly 800 to 1100. They appear bi-modal.\n\n\n### Exercise 2: SAT Scores vs Per Pupil Spending & SAT Scores vs Salaries {-}\n\n#### Part a {-}\n\n```{r}\n# Construct a plot of sat vs expend\n# Include a \"best fit linear regression model\"\nggplot(education, aes(y = sat, x = expend)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n```{r}\n# Construct a plot of sat vs salary\n# Include a \"best fit linear regression model\"\nggplot(education, aes(y = sat, x = salary)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n#### Part b {-}\n\nThe higher the student expenditures and teacher salaries, the worse the SAT performance.\n\n\n### Exercise 3: SAT Scores vs Per Pupil Spending *and* Teacher Salaries {-}\n\n```{r}\nggplot(education, aes(y = sat, x = salary, color = expend)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n\n### Exercise 4: Another Way to Incorporate Scale {-}\n\n```{r}\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 2))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\nggplot(education, aes(y = sat, x = salary, color = cut(expend, 3))) + \n  geom_point() + \n  geom_smooth(se = FALSE, method = \"lm\")\n```\n\nStates with lower salaries and expenditures tend to have higher SAT scores.\n\n\n### Exercise 5: Finally an Explanation {-}\n\n#### Part a {-}\n\n```{r}\nggplot(education, aes(x = fracCat)) + \n  geom_bar()\n```\n\n#### Part b {-}\n\nThe more students in a state that take the SAT, the lower the average scores tend to be. This is probably related to self-selection.\n\n```{r}\nggplot(education, aes(x = sat, fill = fracCat)) + \n  geom_density(alpha = 0.5)\n```\n\n#### Part c {-}\n\nWhen we control for the fraction of students that take the SAT, SAT scores *increase* with expenditure.\n\n```{r}\nggplot(education, aes(y = sat, x = expend, color = fracCat)) + \n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n#### Part d {-}\n\nStudent participation tends to be lower among states with lower expenditures (which are likely also the states with higher ed institutions that haven't historically required the SAT). Those same states tend to have higher SAT scores because of the self-selection of who participates.\n\n\n### Exercise 6: Heat Maps {-}\n\n#### Part a {-}\n\n```{r fig.width = 8, fig.height = 15}\n# Remove the \"State\" column and use it to label the rows\n# Then scale the variables\nplot_data <- education |> \n  column_to_rownames(\"State\") |> \n  data.matrix() |> \n  scale()\n\n# Load the gplots package needed for heatmaps\nlibrary(gplots)\n\n# Construct heatmap 1\nheatmap.2(plot_data,\n  dendrogram = \"none\",\n  Rowv = NA, \n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n```\n\n```{r fig.width = 8, fig.height = 15}\n# Construct heatmap 2\nheatmap.2(plot_data,\n  dendrogram = \"none\",\n  Rowv = TRUE,             ### WE CHANGED THIS FROM NA TO TRUE\n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n```\n\n```{r fig.width = 8, fig.height = 15}\n# Construct heatmap 3\nheatmap.2(plot_data,\n  dendrogram = \"row\",       ### WE CHANGED THIS FROM \"none\" TO \"row\"\n  Rowv = TRUE,            \n  scale = \"column\",\n  keysize = 0.7, \n  density.info = \"none\",\n  col = hcl.colors(256), \n  margins = c(10, 20),\n  colsep = c(1:7), rowsep = (1:50), sepwidth = c(0.05, 0.05),\n  sepcolor = \"white\", trace = \"none\"\n)\n```\n\n#### Part b {-}\n\n-   Similar values in verbal, math, and sat.\n-   High contrast (an inverse relationship) verbal/math/sat scores and the fraction of students that take the SAT.\n-   Outliers of Utah and California in ratio (more students per teacher).\n-   While grouped, fraction and salary are not as similar to each other as the sat scores; it is also interesting to notice states that have high ratios have generally low expenditures per student.\n\n\n### Exercise 7: Star Plots {-}\n\n#### Part a {-}\n\nMN is high on the SAT performance related metrics and low on everything else. MN is similar to Iowa, Kansas, Mississippi, Missouri, the Dakotas...\n\n```{r fig.width = 10, fig.height = 20}\nstars(plot_data,\n  flip.labels = FALSE,\n  key.loc = c(10, 1.5),\n  cex = 1, \n  draw.segments = TRUE\n)\n```\n\n#### Part b {-}\n\nWhen the states are in geographical ordering, we'd notice more easily that states in similar regions of the U.S. have similar patterns of these variables.\n\n```{r fig.width = 10, fig.height = 10}\nstars(plot_data,\n  flip.labels = FALSE,\n  locations = data.matrix(as.data.frame(state.center)),  # added external data to arrange by geo location\n  key.loc = c(-110, 28),\n  cex = 1, \n  draw.segments = TRUE\n)\n```\n\n</details>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":false,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":true,"code-line-numbers":true,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"css":["../style/custom.css"],"output-file":"ica-multi.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","editor":{"markdown":{"wrap":"sentence"}},"theme":{"light":"flatly","dark":"darkly"},"code-copy":true,"title":"Mulivariate Viz"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}