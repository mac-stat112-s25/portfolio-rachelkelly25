{"title":"Univariate Viz","markdown":{"yaml":{"title":"Univariate Viz"},"headingText":"Exercise 1: Research Questions","containsRefs":false,"markdown":"\n\nUse this file for practice with the **univariate viz** in-class activity.  Refer to the class website for details.\n\n```{r}\n# Import data\nhikes <- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")\n```\n\n```{r}\nhead(hikes)\n```\na. Visualization of the categorical difficulty rating variable should capture 4 through 7 difficulty range. \nb. Visualization of the quantitative elevation variable should capture the points of elevation.\n```{r}\n# Use the ggplot function\n\n```\n```{r}\n# Load the package\nlibrary(tidyverse)\n```\n### Exercise 2: Load tidyverse {.unnumbered}\n\nWe'll address the above questions using `ggplot` tools. Try running the following chunk and simply take note of the error message -- this is one you'll get a lot!\n\n```{r}\n# Use the ggplot function\nggplot(hikes, aes(x = rating))\n```\n\nIn order to use `ggplot` tools, we have to first *load* the `tidyverse` package in which they live. We've *installed* the package but we need to tell R when we want to *use* it. Run the chunk below to load the library. You'll need to do this within any .qmd file that uses `ggplot()`.\n\n```{r}\n#| eval: true\n#| message: false\n\n# Load the package\nlibrary(tidyverse)\n```\n\n\n\n### Exercise 3: Bar Chart of Ratings - Part 1 {.unnumbered}\n\nConsider some specific research questions about the difficulty `rating` of the hikes:\n\n1. How many hikes fall into each category?\n\n2. Are the hikes evenly distributed among these categories, or are some more common than others?\n\nAll of these questions can be answered with: (1) a **bar chart**; of (2) the *categorical* data recorded in the `rating` column. First, set up the plotting **frame**:\n\n```{r}\nggplot(hikes, aes(x = rating))\n```\n\nThink about:\n\n-   What did this do? What do you observe?\nIt made the x axis of a graph.\n-   What, in general, is the first argument of the `ggplot()` function?\nThe first argument is to load the x axis.\n-   What is the purpose of writing `x = rating`?\nThat's the x axis.\n-   What do you think `aes` stands for?!?\nConstruct aesthetic mappings.\n\n### Exercise 4: Bar Chart of Ratings - Part 2 {.unnumbered}\n\nNow let's add a **geometric layer** to the frame / canvas, and start customizing the plot's **theme**. To this end, try each chunk below, *one by one*. In each chunk, make a comment about how both the code and the corresponding plot both changed.\n\nNOTE:\n\n-   Pay attention to the general code properties and structure, not memorization.\n-   Not all of these are \"good\" plots. We're just exploring `ggplot`.\n\n```{r}\n# This made it a bar plot.\nggplot(hikes, aes(x = rating)) +\n  geom_bar()\n```\n\n```{r}\n# Makes access labels.\nggplot(hikes, aes(x = rating)) +\n  geom_bar() +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n```\n\n```{r}\n# This function filles the bars with blue or a corresponding color.\nggplot(hikes, aes(x = rating)) +\n  geom_bar(fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n```\n\n```{r}\n# Outlines it in orange.\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n```\n\n```{r}\n# Changed the theme. Changed the background color\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Rating\", y = \"Number of hikes\") +\n  theme_minimal()\n```\n\n\n\n### Exercise 5: Bar Chart Follow-up {.unnumbered}\n\n#### Part a {.unnumbered}\n\nReflect on the `ggplot()` code.\n\n-   What's the purpose of the `+`? When do we use it?\nTo add something to the plot\n-   We added the bars using `geom_bar()`? Why \"geom\"?\nBecause that is the code\n-   What does `labs()` stand for?\nLabels\n-   What's the difference between `color` and `fill`?\nColor is the outline, fill is the inside.\n\n#### Part b {.unnumbered}\n\nIn general, bar charts allow us to examine the following properties of a *categorical* variable:\n\n-   **observed categories**: What categories did we observe?\nFrequency and categories\n-   **variability between categories**: Are observations evenly spread out among the categories, or are some categories more common than others?\nSome are more common than others.\n\nWe must then *translate* this information into the *context* of our analysis, here hikes in the Adirondacks. Summarize below what you learned from the bar chart, in context.\nI learned that there are different difficulties of hikes with the majority being modern difficulty levels. \n\n#### Part c {.unnumbered}\n\nIs there anything you don't like about this barplot? For example: check out the x-axis again.\nI want the order to be different. It should be Easy, Moderate, Difficult\n\n\n\n### Exercise 6: Sad Bar Chart {.unnumbered}\n\nLet's now consider some research questions related to the *quantitative* `elevation` variable:\n\n1. Among the hikes, what's the *range* of elevation and how are the hikes *distributed* within this range (e.g. evenly, in clumps, \"normally\")?\nDistrubuted in clumps\n2. What's a *typical* elevation?\nAround 4400\n3. Are there any *outliers*, i.e. hikes that have unusually high or low elevations?\nYes, the highest elevations are the outliers. \n\nHere:\n\n-   Construct a **bar chart** of the *quantitative* `elevation` variable.\n-   Explain why this might *not* be an effective visualization for this and other quantitative variables. (What questions does / doesn't it help answer?)\nIt shows the range but clumps the data in a way that isn't easily summarized.\n\n```{r}\nggplot(hikes, aes(x = elevation)) + geom_histogram()\n```\n\n\n### Exercise 7: A Histogram of Elevation {.unnumbered}\n\nQuantitative variables require different viz than categorical variables. Especially when there are many possible outcomes of the quantitative variable. It's typically insufficient to simply count up the number of times we've observed a particular outcome as the bar graph did above. It gives us a sense of ranges and typical outcomes, but not a good sense of how the observations are distributed across this range. We'll explore two methods for graphing quantitative variables: **histograms** and **density plots**.\n\n**Histograms** are constructed by (1) dividing up the observed range of the variable into 'bins' of equal width; and (2) counting up the number of cases that fall into each bin. Check out the example below:\n\n![](https://mac-stat.github.io/images/112/histogram_demo.png){width=\"50%\"}\n\n#### Part a {.unnumbered}\n\nLet's dig into some details.\n\n-   How many hikes have an elevation between 4500 and 4700 feet?\n6 hikes\n-   How many total hikes have an elevation of at least 5100 feet?\n2 hikes\n\n#### Part b {.unnumbered}\n\nNow the bigger picture. In general, histograms allow us to examine the following properties of a *quantitative* variable:\n\n-   **typical outcome:** Whereâ€™s the center of the data points? What's typical?\n4400 feet\n-   **variability & range:** How spread out are the outcomes? What are the max and min outcomes?\nMin is 3700 to 5500.\n-   **shape:** How are values distributed along the observed range? Is the distribution symmetric, right-skewed, left-skewed, bi-modal, or uniform (flat)?\nRight skewed (means there's more on the left)\n-   **outliers:** Are there any outliers, i.e. outcomes that are unusually large/small?\nYes the two above 5000 feet.\n\nWe must then *translate* this information into the *context* of our analysis, here hikes in the Adirondacks. Addressing each of the features in the above list, summarize below what you learned from the histogram, in context.\n\nThere are hikes with an median elevation of around 4400 feet with a 3700 to 5500 range. I wish I was hiking. \n\n### Exercise 8: Building Histograms - Part 1 {.unnumbered}\n\n2-MINUTE CHALLENGE: Thinking of the bar chart code, try to *intuit* what line you can tack on to the below frame of `elevation` to add a histogram layer. Don't forget a `+`. If it doesn't come to you within 2 minutes, *no problem* -- all will be revealed in the next exercise.\nAdd geom_histogram() to make histogram\n\n```{r}\nggplot(hikes, aes(x = elevation)) +geom_histogram()\n```\n\n\n### Exercise 9: Building Histograms - Part 2 {.unnumbered}\n\nLet's build some histograms. Try each chunk below, *one by one*. In each chunk, make a comment about how both the code and the corresponding plot both changed.\n\n```{r}\n# Made a histogram\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram()\n```\n\n```{r}\n# Added white outlines of each column\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") \n```\n\n```{r}\n# Filled with blue\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\") \n```\n\n```{r}\n# Changed the x and y axis labels\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n```{r}\n# Changed the ranges of the columns or the bin width\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 1000) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n```{r}\n# Made the bin width way smaller\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 5) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n```{r}\n# Changed the bin width again to make it more reasonable\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 200) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n\n### Exercise 10: Histogram Follow-up {.unnumbered}\n\n-   What function added the histogram layer / geometry?\n+geom_histogram()\n-   What's the difference between `color` and `fill`?\nColor is the outline, fill in the inside\n-   Why does adding `color = \"white\"` improve the visualization?\nIt just makes the color of the histogram surrounding white\n-   What did `binwidth` do?\nAllows you to change the x axis categories\n-   Why does the histogram become ineffective if the `binwidth` is too big (e.g. 1000 feet)?\nBecause then all the data is grouped together and you can't see the variations\n-   Why does the histogram become ineffective if the `binwidth` is too small (e.g. 5 feet)?\nBeucase the data isn't grouped effectively to see patterns.\n\n\n### Exercise 11: Density Plots {.unnumbered}\n\n**Density plots** are essentially smooth versions of the histogram. Instead of sorting observations into discrete bins, the \"density\" of observations is calculated across the entire range of outcomes. The greater the number of observations, the greater the density! The density is then scaled so that the area under the density curve **always equals 1** and the area under any fraction of the curve represents the fraction of cases that lie in that range.\n\nCheck out a density plot of elevation. Notice that the y-axis (density) has no contextual interpretation -- it's a relative measure. The *higher* the density, the more *common* are elevations in that range.\n\n```{r}\nggplot(hikes, aes(x = elevation)) +\n  geom_density()\n```\n\n**Questions**\n\n-   INTUITION CHECK: Before tweaking the code and thinking back to `geom_bar()` and `geom_histogram()`, how do you *anticipate* the following code will change the plot?\n\n    -   `geom_density(color = \"blue\")`\n    -   `geom_density(fill = \"orange\")`\n\n-   TRY IT! Test out those lines in the chunk below. Was your intuition correct?\n\n```{r}\nggplot(hikes, aes(x = elevation)) +\n geom_density(color = \"blue\", fill = \"orange\")\n```\n\n-   Examine the density plot. How does it compare to the histogram? What does it tell you about the *typical* elevation, *variability / range* in elevations, and *shape* of the distribution of *elevations* within this range?\nTypical elevation is still around 4400 feet\nThe shape is stretched on the right so it's right skewed since that's where the outliers are. It's a hump shape. Distrubution is 3700 to around 5500.\n\n\n### Exercise 12: Density Plots vs Histograms {.unnumbered}\n\nThe histogram and density plot both allow us to visualize the behavior of a quantitative variable: typical outcome, variability / range, shape, and outliers. What are the pros/cons of each? What do you like/not like about each?\nHistograms are more specific but don't show the overall trend as well as the density plot.\n\n\n### Exercise 13: Code = communication {.unnumbered}\n\nWe *obviously* won't be done until we talk about communication. All code above has a similar *general* structure (where the details can change):\n\n```{r}\n#| eval: false\n\nggplot(___, aes(x = ___)) + \n  geom___(color = \"___\", fill = \"___\") + \n  labs(x = \"___\", y = \"___\")\n```\n\n-   Though not *necessary* to the code working, it's common, good practice to *indent* or *tab* the lines of code after the first line (counterexample below). Why? So that it's easier to read the code. And you understand that the code is all editing the one graphic.\n\n```{r}\n# YUCK\nggplot(hikes, aes(x = elevation)) +\ngeom_histogram(color = \"white\", binwidth = 200) +\nlabs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n-   Though not *necessary* to the code working, it's common, good practice to put a *line break* after each `+` (counterexample below). Why?\n\n```{r}\n# YUCK HARD TO READ\nggplot(hikes, aes(x = elevation)) + geom_histogram(color = \"white\", binwidth = 200) + labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n\n### Exercise 14: Practice {.unnumbered}\n\n#### Part a {.unnumbered}\n\nPractice your viz skills to learn about some of the variables in one of the following datasets from the previous class:\n\n```{r}\n# Data on students in this class\nsurvey <- read.csv(\"https://hash-mac.github.io/stat112site-s25/data/survey.csv\")\n\nggplot(survey, aes(x=hangout))+geom_bar(color = \"pink\", fill = \"purple\")\n\n\n# World Cup data\nworld_cup <- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv\")\n```\n\n#### Part b {.unnumbered}\n\nCheck out the [RStudio Data Visualization cheat sheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-visualization.pdf) to learn more features of `ggplot`.\n\n::: {.callout-warning title=\"Check â†’ Commit â†’ Push\"}\nWhen done, don't forgot to click **Render Book** and check the resulting HTML files. If happy, jump to GitHub Desktop and commit the changes with the message **Finish activity 3** and push to GitHub.  Wait few seconds, then visit your portfolio website and make sure the changes are there.\n:::\n\n## Solutions\n\n<details>\n\n<summary>Click for Solutions</summary>\n\n### Exercise 1: Research Questions {.unnumbered}\n\na.  For example: how many hikes are there in each category? are any categories more common than others?\nb.  For example: What's a typical elevation? What's the range in elevations?\n\n\n\n### Exercise 3: Bar Chart of Ratings - Part 1 {.unnumbered}\n\n```{r}\n#| eval: true\n\nggplot(hikes, aes(x = rating))\n```\n\n-   just a blank canvas\n-   name of the dataset\n-   indicate which variable to plot on x-axis\n-   `aes`thetics\n\n\n\n### Exercise 4: Bar Chart of Ratings - Part 2 {.unnumbered}\n\n```{r}\n#| eval: true\n\n# Add a bar plot LAYER\nggplot(hikes, aes(x = rating)) +\n  geom_bar()\n\n# Add meaningful axis labels\nggplot(hikes, aes(x = rating)) +\n  geom_bar() +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n# FILL the bars with blue\nggplot(hikes, aes(x = rating)) +\n  geom_bar(fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n# COLOR the outline of the bars in orange\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n# Change the theme to a white background\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Rating\", y = \"Number of hikes\") + \n  theme_minimal()\n```\n\n\n### Exercise 5: Bar Chart Follow-up {.unnumbered}\n\n#### Part a {.unnumbered}\n\n-   To indicate we're still adding layers to / modifying our plot.\n-   Bars are the `geom`etric elements we're adding in this layer.\n-   labels\n-   `fill` fills in the bars. `color` outlines the bars.\n\n#### Part b {.unnumbered}\n\nMost hikes are moderate, the fewest number are difficult.\n\n#### Part c {.unnumbered}\n\nI don't like that the categories are alphabetical, not in order of difficulty level.\n\n\n\n### Exercise 6: Sad Bar Chart {.unnumbered}\n\nThere are too many different outcomes of elevation.\n\n```{r}\n#| eval: true\n\nggplot(hikes, aes(x = elevation)) + \n  geom_bar()\n```\n\n\n\n### Exercise 7: A Histogram of Elevation {.unnumbered}\n\n#### Part a {.unnumbered}\n\n-   6\n-   1 + 1 = 2\n\n#### Part b {.unnumbered}\n\nElevations range from roughly 3700 to 5500 feet. Elevations vary from hike to hike relatively *normally* (with a bell shape) around a typical elevation of roughly 4500 feet.\n\n\n\n### Exercise 9: Building Histograms - Part 2 {.unnumbered}\n\n```{r}\n#| eval: true\n\n# Add a histogram layer\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram()\n\n# Outline the bars in white\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") \n\n# Fill the bars in blue\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\") \n\n# Add axis labels\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n# Change the width of the bins to 1000 feet\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 1000) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n# Change the width of the bins to 5 feet\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 5) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n# Change the width of the bins to 200 feet\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 200) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n\n### Exercise 10: Histogram Follow-up {.unnumbered}\n\n-   `geom_histogram()`\n-   `color` outlined the bars and `fill` filled them\n-   easier to distinguish between the bars\n-   changed the bin width\n-   we lump too many hikes together and lose track of the nuances\n-   we don't lump enough hikes together and lose track of the bigger picture trends\n\n\n### Exercise 11: Density plots {.unnumbered}\n\n```{r}\n#| eval: true\n\nggplot(hikes, aes(x = elevation)) +\n geom_density(color = \"blue\", fill = \"orange\")\n```\n\n\n### Exercise 13: Code = Communication {.unnumbered}\n\n-   Clarifies that the subsequent lines are a continuation of the first. That is, we're not done with the plot yet. These lines are all part of the same idea.\n-   This is like a run-on sentence. It's tough to track the distinct steps that go into building the plot.\n\n\n</details>\n","srcMarkdownNoYaml":"\n\nUse this file for practice with the **univariate viz** in-class activity.  Refer to the class website for details.\n\n### Exercise 1: Research Questions\n```{r}\n# Import data\nhikes <- read.csv(\"https://mac-stat.github.io/data/high_peaks.csv\")\n```\n\n```{r}\nhead(hikes)\n```\na. Visualization of the categorical difficulty rating variable should capture 4 through 7 difficulty range. \nb. Visualization of the quantitative elevation variable should capture the points of elevation.\n```{r}\n# Use the ggplot function\n\n```\n```{r}\n# Load the package\nlibrary(tidyverse)\n```\n### Exercise 2: Load tidyverse {.unnumbered}\n\nWe'll address the above questions using `ggplot` tools. Try running the following chunk and simply take note of the error message -- this is one you'll get a lot!\n\n```{r}\n# Use the ggplot function\nggplot(hikes, aes(x = rating))\n```\n\nIn order to use `ggplot` tools, we have to first *load* the `tidyverse` package in which they live. We've *installed* the package but we need to tell R when we want to *use* it. Run the chunk below to load the library. You'll need to do this within any .qmd file that uses `ggplot()`.\n\n```{r}\n#| eval: true\n#| message: false\n\n# Load the package\nlibrary(tidyverse)\n```\n\n\n\n### Exercise 3: Bar Chart of Ratings - Part 1 {.unnumbered}\n\nConsider some specific research questions about the difficulty `rating` of the hikes:\n\n1. How many hikes fall into each category?\n\n2. Are the hikes evenly distributed among these categories, or are some more common than others?\n\nAll of these questions can be answered with: (1) a **bar chart**; of (2) the *categorical* data recorded in the `rating` column. First, set up the plotting **frame**:\n\n```{r}\nggplot(hikes, aes(x = rating))\n```\n\nThink about:\n\n-   What did this do? What do you observe?\nIt made the x axis of a graph.\n-   What, in general, is the first argument of the `ggplot()` function?\nThe first argument is to load the x axis.\n-   What is the purpose of writing `x = rating`?\nThat's the x axis.\n-   What do you think `aes` stands for?!?\nConstruct aesthetic mappings.\n\n### Exercise 4: Bar Chart of Ratings - Part 2 {.unnumbered}\n\nNow let's add a **geometric layer** to the frame / canvas, and start customizing the plot's **theme**. To this end, try each chunk below, *one by one*. In each chunk, make a comment about how both the code and the corresponding plot both changed.\n\nNOTE:\n\n-   Pay attention to the general code properties and structure, not memorization.\n-   Not all of these are \"good\" plots. We're just exploring `ggplot`.\n\n```{r}\n# This made it a bar plot.\nggplot(hikes, aes(x = rating)) +\n  geom_bar()\n```\n\n```{r}\n# Makes access labels.\nggplot(hikes, aes(x = rating)) +\n  geom_bar() +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n```\n\n```{r}\n# This function filles the bars with blue or a corresponding color.\nggplot(hikes, aes(x = rating)) +\n  geom_bar(fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n```\n\n```{r}\n# Outlines it in orange.\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n```\n\n```{r}\n# Changed the theme. Changed the background color\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Rating\", y = \"Number of hikes\") +\n  theme_minimal()\n```\n\n\n\n### Exercise 5: Bar Chart Follow-up {.unnumbered}\n\n#### Part a {.unnumbered}\n\nReflect on the `ggplot()` code.\n\n-   What's the purpose of the `+`? When do we use it?\nTo add something to the plot\n-   We added the bars using `geom_bar()`? Why \"geom\"?\nBecause that is the code\n-   What does `labs()` stand for?\nLabels\n-   What's the difference between `color` and `fill`?\nColor is the outline, fill is the inside.\n\n#### Part b {.unnumbered}\n\nIn general, bar charts allow us to examine the following properties of a *categorical* variable:\n\n-   **observed categories**: What categories did we observe?\nFrequency and categories\n-   **variability between categories**: Are observations evenly spread out among the categories, or are some categories more common than others?\nSome are more common than others.\n\nWe must then *translate* this information into the *context* of our analysis, here hikes in the Adirondacks. Summarize below what you learned from the bar chart, in context.\nI learned that there are different difficulties of hikes with the majority being modern difficulty levels. \n\n#### Part c {.unnumbered}\n\nIs there anything you don't like about this barplot? For example: check out the x-axis again.\nI want the order to be different. It should be Easy, Moderate, Difficult\n\n\n\n### Exercise 6: Sad Bar Chart {.unnumbered}\n\nLet's now consider some research questions related to the *quantitative* `elevation` variable:\n\n1. Among the hikes, what's the *range* of elevation and how are the hikes *distributed* within this range (e.g. evenly, in clumps, \"normally\")?\nDistrubuted in clumps\n2. What's a *typical* elevation?\nAround 4400\n3. Are there any *outliers*, i.e. hikes that have unusually high or low elevations?\nYes, the highest elevations are the outliers. \n\nHere:\n\n-   Construct a **bar chart** of the *quantitative* `elevation` variable.\n-   Explain why this might *not* be an effective visualization for this and other quantitative variables. (What questions does / doesn't it help answer?)\nIt shows the range but clumps the data in a way that isn't easily summarized.\n\n```{r}\nggplot(hikes, aes(x = elevation)) + geom_histogram()\n```\n\n\n### Exercise 7: A Histogram of Elevation {.unnumbered}\n\nQuantitative variables require different viz than categorical variables. Especially when there are many possible outcomes of the quantitative variable. It's typically insufficient to simply count up the number of times we've observed a particular outcome as the bar graph did above. It gives us a sense of ranges and typical outcomes, but not a good sense of how the observations are distributed across this range. We'll explore two methods for graphing quantitative variables: **histograms** and **density plots**.\n\n**Histograms** are constructed by (1) dividing up the observed range of the variable into 'bins' of equal width; and (2) counting up the number of cases that fall into each bin. Check out the example below:\n\n![](https://mac-stat.github.io/images/112/histogram_demo.png){width=\"50%\"}\n\n#### Part a {.unnumbered}\n\nLet's dig into some details.\n\n-   How many hikes have an elevation between 4500 and 4700 feet?\n6 hikes\n-   How many total hikes have an elevation of at least 5100 feet?\n2 hikes\n\n#### Part b {.unnumbered}\n\nNow the bigger picture. In general, histograms allow us to examine the following properties of a *quantitative* variable:\n\n-   **typical outcome:** Whereâ€™s the center of the data points? What's typical?\n4400 feet\n-   **variability & range:** How spread out are the outcomes? What are the max and min outcomes?\nMin is 3700 to 5500.\n-   **shape:** How are values distributed along the observed range? Is the distribution symmetric, right-skewed, left-skewed, bi-modal, or uniform (flat)?\nRight skewed (means there's more on the left)\n-   **outliers:** Are there any outliers, i.e. outcomes that are unusually large/small?\nYes the two above 5000 feet.\n\nWe must then *translate* this information into the *context* of our analysis, here hikes in the Adirondacks. Addressing each of the features in the above list, summarize below what you learned from the histogram, in context.\n\nThere are hikes with an median elevation of around 4400 feet with a 3700 to 5500 range. I wish I was hiking. \n\n### Exercise 8: Building Histograms - Part 1 {.unnumbered}\n\n2-MINUTE CHALLENGE: Thinking of the bar chart code, try to *intuit* what line you can tack on to the below frame of `elevation` to add a histogram layer. Don't forget a `+`. If it doesn't come to you within 2 minutes, *no problem* -- all will be revealed in the next exercise.\nAdd geom_histogram() to make histogram\n\n```{r}\nggplot(hikes, aes(x = elevation)) +geom_histogram()\n```\n\n\n### Exercise 9: Building Histograms - Part 2 {.unnumbered}\n\nLet's build some histograms. Try each chunk below, *one by one*. In each chunk, make a comment about how both the code and the corresponding plot both changed.\n\n```{r}\n# Made a histogram\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram()\n```\n\n```{r}\n# Added white outlines of each column\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") \n```\n\n```{r}\n# Filled with blue\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\") \n```\n\n```{r}\n# Changed the x and y axis labels\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n```{r}\n# Changed the ranges of the columns or the bin width\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 1000) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n```{r}\n# Made the bin width way smaller\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 5) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n```{r}\n# Changed the bin width again to make it more reasonable\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 200) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n\n### Exercise 10: Histogram Follow-up {.unnumbered}\n\n-   What function added the histogram layer / geometry?\n+geom_histogram()\n-   What's the difference between `color` and `fill`?\nColor is the outline, fill in the inside\n-   Why does adding `color = \"white\"` improve the visualization?\nIt just makes the color of the histogram surrounding white\n-   What did `binwidth` do?\nAllows you to change the x axis categories\n-   Why does the histogram become ineffective if the `binwidth` is too big (e.g. 1000 feet)?\nBecause then all the data is grouped together and you can't see the variations\n-   Why does the histogram become ineffective if the `binwidth` is too small (e.g. 5 feet)?\nBeucase the data isn't grouped effectively to see patterns.\n\n\n### Exercise 11: Density Plots {.unnumbered}\n\n**Density plots** are essentially smooth versions of the histogram. Instead of sorting observations into discrete bins, the \"density\" of observations is calculated across the entire range of outcomes. The greater the number of observations, the greater the density! The density is then scaled so that the area under the density curve **always equals 1** and the area under any fraction of the curve represents the fraction of cases that lie in that range.\n\nCheck out a density plot of elevation. Notice that the y-axis (density) has no contextual interpretation -- it's a relative measure. The *higher* the density, the more *common* are elevations in that range.\n\n```{r}\nggplot(hikes, aes(x = elevation)) +\n  geom_density()\n```\n\n**Questions**\n\n-   INTUITION CHECK: Before tweaking the code and thinking back to `geom_bar()` and `geom_histogram()`, how do you *anticipate* the following code will change the plot?\n\n    -   `geom_density(color = \"blue\")`\n    -   `geom_density(fill = \"orange\")`\n\n-   TRY IT! Test out those lines in the chunk below. Was your intuition correct?\n\n```{r}\nggplot(hikes, aes(x = elevation)) +\n geom_density(color = \"blue\", fill = \"orange\")\n```\n\n-   Examine the density plot. How does it compare to the histogram? What does it tell you about the *typical* elevation, *variability / range* in elevations, and *shape* of the distribution of *elevations* within this range?\nTypical elevation is still around 4400 feet\nThe shape is stretched on the right so it's right skewed since that's where the outliers are. It's a hump shape. Distrubution is 3700 to around 5500.\n\n\n### Exercise 12: Density Plots vs Histograms {.unnumbered}\n\nThe histogram and density plot both allow us to visualize the behavior of a quantitative variable: typical outcome, variability / range, shape, and outliers. What are the pros/cons of each? What do you like/not like about each?\nHistograms are more specific but don't show the overall trend as well as the density plot.\n\n\n### Exercise 13: Code = communication {.unnumbered}\n\nWe *obviously* won't be done until we talk about communication. All code above has a similar *general* structure (where the details can change):\n\n```{r}\n#| eval: false\n\nggplot(___, aes(x = ___)) + \n  geom___(color = \"___\", fill = \"___\") + \n  labs(x = \"___\", y = \"___\")\n```\n\n-   Though not *necessary* to the code working, it's common, good practice to *indent* or *tab* the lines of code after the first line (counterexample below). Why? So that it's easier to read the code. And you understand that the code is all editing the one graphic.\n\n```{r}\n# YUCK\nggplot(hikes, aes(x = elevation)) +\ngeom_histogram(color = \"white\", binwidth = 200) +\nlabs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n-   Though not *necessary* to the code working, it's common, good practice to put a *line break* after each `+` (counterexample below). Why?\n\n```{r}\n# YUCK HARD TO READ\nggplot(hikes, aes(x = elevation)) + geom_histogram(color = \"white\", binwidth = 200) + labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n\n### Exercise 14: Practice {.unnumbered}\n\n#### Part a {.unnumbered}\n\nPractice your viz skills to learn about some of the variables in one of the following datasets from the previous class:\n\n```{r}\n# Data on students in this class\nsurvey <- read.csv(\"https://hash-mac.github.io/stat112site-s25/data/survey.csv\")\n\nggplot(survey, aes(x=hangout))+geom_bar(color = \"pink\", fill = \"purple\")\n\n\n# World Cup data\nworld_cup <- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv\")\n```\n\n#### Part b {.unnumbered}\n\nCheck out the [RStudio Data Visualization cheat sheet](https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-visualization.pdf) to learn more features of `ggplot`.\n\n::: {.callout-warning title=\"Check â†’ Commit â†’ Push\"}\nWhen done, don't forgot to click **Render Book** and check the resulting HTML files. If happy, jump to GitHub Desktop and commit the changes with the message **Finish activity 3** and push to GitHub.  Wait few seconds, then visit your portfolio website and make sure the changes are there.\n:::\n\n## Solutions\n\n<details>\n\n<summary>Click for Solutions</summary>\n\n### Exercise 1: Research Questions {.unnumbered}\n\na.  For example: how many hikes are there in each category? are any categories more common than others?\nb.  For example: What's a typical elevation? What's the range in elevations?\n\n\n\n### Exercise 3: Bar Chart of Ratings - Part 1 {.unnumbered}\n\n```{r}\n#| eval: true\n\nggplot(hikes, aes(x = rating))\n```\n\n-   just a blank canvas\n-   name of the dataset\n-   indicate which variable to plot on x-axis\n-   `aes`thetics\n\n\n\n### Exercise 4: Bar Chart of Ratings - Part 2 {.unnumbered}\n\n```{r}\n#| eval: true\n\n# Add a bar plot LAYER\nggplot(hikes, aes(x = rating)) +\n  geom_bar()\n\n# Add meaningful axis labels\nggplot(hikes, aes(x = rating)) +\n  geom_bar() +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n# FILL the bars with blue\nggplot(hikes, aes(x = rating)) +\n  geom_bar(fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n# COLOR the outline of the bars in orange\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\") +\n  labs(x = \"Rating\", y = \"Number of hikes\")\n\n# Change the theme to a white background\nggplot(hikes, aes(x = rating)) +\n  geom_bar(color = \"orange\", fill = \"blue\")  +\n  labs(x = \"Rating\", y = \"Number of hikes\") + \n  theme_minimal()\n```\n\n\n### Exercise 5: Bar Chart Follow-up {.unnumbered}\n\n#### Part a {.unnumbered}\n\n-   To indicate we're still adding layers to / modifying our plot.\n-   Bars are the `geom`etric elements we're adding in this layer.\n-   labels\n-   `fill` fills in the bars. `color` outlines the bars.\n\n#### Part b {.unnumbered}\n\nMost hikes are moderate, the fewest number are difficult.\n\n#### Part c {.unnumbered}\n\nI don't like that the categories are alphabetical, not in order of difficulty level.\n\n\n\n### Exercise 6: Sad Bar Chart {.unnumbered}\n\nThere are too many different outcomes of elevation.\n\n```{r}\n#| eval: true\n\nggplot(hikes, aes(x = elevation)) + \n  geom_bar()\n```\n\n\n\n### Exercise 7: A Histogram of Elevation {.unnumbered}\n\n#### Part a {.unnumbered}\n\n-   6\n-   1 + 1 = 2\n\n#### Part b {.unnumbered}\n\nElevations range from roughly 3700 to 5500 feet. Elevations vary from hike to hike relatively *normally* (with a bell shape) around a typical elevation of roughly 4500 feet.\n\n\n\n### Exercise 9: Building Histograms - Part 2 {.unnumbered}\n\n```{r}\n#| eval: true\n\n# Add a histogram layer\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram()\n\n# Outline the bars in white\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") \n\n# Fill the bars in blue\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", fill = \"blue\") \n\n# Add axis labels\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\") +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n# Change the width of the bins to 1000 feet\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 1000) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n# Change the width of the bins to 5 feet\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 5) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n\n# Change the width of the bins to 200 feet\nggplot(hikes, aes(x = elevation)) +\n  geom_histogram(color = \"white\", binwidth = 200) +\n  labs(x = \"Elevation (feet)\", y = \"Number of hikes\")\n```\n\n\n### Exercise 10: Histogram Follow-up {.unnumbered}\n\n-   `geom_histogram()`\n-   `color` outlined the bars and `fill` filled them\n-   easier to distinguish between the bars\n-   changed the bin width\n-   we lump too many hikes together and lose track of the nuances\n-   we don't lump enough hikes together and lose track of the bigger picture trends\n\n\n### Exercise 11: Density plots {.unnumbered}\n\n```{r}\n#| eval: true\n\nggplot(hikes, aes(x = elevation)) +\n geom_density(color = \"blue\", fill = \"orange\")\n```\n\n\n### Exercise 13: Code = Communication {.unnumbered}\n\n-   Clarifies that the subsequent lines are a continuation of the first. That is, we're not done with the plot yet. These lines are all part of the same idea.\n-   This is like a run-on sentence. It's tough to track the distinct steps that go into building the plot.\n\n\n</details>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":false,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":true,"code-line-numbers":true,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"css":["../style/custom.css"],"output-file":"ica-uni.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","editor":{"markdown":{"wrap":"sentence"}},"theme":{"light":"flatly","dark":"darkly"},"code-copy":true,"title":"Univariate Viz"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}