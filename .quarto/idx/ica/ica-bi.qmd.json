{"title":"Bivariate Viz","markdown":{"yaml":{"title":"Bivariate Viz"},"headingText":"Review","containsRefs":false,"markdown":"\n\nUse this file for practice with the **bivariate viz** in-class activity.  Refer to the class website for details.\n\n\nLet's review some *univariate* concepts and code using our class survey data. If the answers aren't at the top of your mind, don't fret! We've barely started speaking this new language, and learned a ton of vocab last week, so you naturally won't remember it all.\n\n```{r}\n# Import data\nsurvey <- read.csv(\"https://ajohns24.github.io/data/112/about_us_2024.csv\")\n\n# How many students have now filled out the survey?\nnrow(survey)\n\n# What type of variables do we have?\nstr(survey)\n```\n\n### EXAMPLE 1: Hangout Preferences {-}\n\nStudents were asked, in that moment, where they'd most like to spend time outside. How did they answer? Was there a lot of agreement or a lot of variability in answers? Build and interpret a plot that helps address these questions while reviewing:\n\n-   \"code as communication\"\n-   connecting with the components of a plot:\n    -   set up a **frame**\n    -   add a **layer** / geometric element\n    -   change the **theme**, e.g. axis labels, color, fill\n\n```{r}\n# Attach a package needed to use the ggplot function\nlibrary(tidyverse)\n\n# Make a ggplot\nggplot(survey, aes(x=hangout)) + geom_bar()\n```\n\n```{r echo=FALSE, message=FALSE}\nlibrary(tidyverse)\n```\n\n\n### EXAMPLE 2: Temperature Preferences {-}\n\nStudents were asked about their ideal outdoor temperature, in degrees Celsius. How did they answer? What was the typical response? What was the range in responses? Were there any outliers? Build and interpret 2 plots that help address these questions.\n\n```{r}\nggplot(survey, aes(x = fave_temp)) + \n  geom_histogram(color = \"white\", binwidth = 5)\n```\n```{r}\nggplot(survey, aes(x = fave_temp)) + \n  geom_density()\n```\n\n\n\n::: {.callout-note title=\"Bar Charts vs. Histograms\"}\nBar charts & histograms can appear pretty similar, but they do different things.\n\n-   **Bar charts** count up the number of observations of each outcome of a variable. They're good for *categorical* variables, or *quantitative* variables with only a handful of possible outcomes.\n-   **Histograms** count up the number of observations that fall into different numerical *ranges* of variable. They're good for *quantitative* variables, especially those with many different observed outcomes.\n:::\n\n\n\n## New stuff\n\nThus far, we've been studying one variable at a time, using *univariate* plots. But once we get a sense of how individual variables behave on their own, our questions often turn to *relationships* among variables. For example, in our `hikes` data:\n\n-   How much `time` does it take to complete a hike? ------\\> How is `time` related to a hike's `elevation`? What about its `length`?\n-   How does difficult `rating` vary from hike to hike? -------\\> How is difficulty `rating` related to a hike's `ascent`?\n\n\n### Exploring relationships\n\nExploring univariate patterns often sparks follow-up questions about **relationships** between 2+ variables. Often, but not always, variables take on specific roles:\n\n-   **response variable**: the variable whose variability we would like to explain (`time` to complete a hike)\n-   **predictors**: variables that might explain some of the variability in the response (a hike's `elevation` or `length`)\n\nVisualizations can help explore:\n\n-   relationship *trends* (direction and form)\n-   relationship *strength* (degree of variability from the trend)\n-   *outliers* in the relationship\n\n#### EXAMPLE 3 {-}\n\nFor each pair of variables below, sketch on paper a visualization of their relationship. Focus on general viz process, don't worry about the exact details. The data here are totally made up.\n\n  a.  3pm temperature (response) vs 9am temperature (predictor)\n\n```{r}\ndata.frame(temp_3pm = c(24, 26, 20, 15, 15, 15), temp_9am = c(14, 18, 15, 13, 11, 11))\n```\n\n  b.  3pm temperature (response) vs location (predictor)\n\n```{r}\nweather <- data.frame(temp_3pm = c(24, 26, 20, 15, 15, 0, 40, 60, 57, 44, 51, 75),\n                      location = rep(c(\"A\", \"B\"), each = 6))\nweather\n```\n\nThink: How might we modify the below density plot of `temp_3pm` to distinguish between locations?\n\n```{r}\nggplot(weather, aes(x = temp_3pm)) +\n      geom_density()\n```\n\nc.  `rain_today` (the response) and `location` (the predictor)\n\n```{r}\nweather <- data.frame(rain_today = c(\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"yes\", \"no\", \"yes\", \"yes\", \"no\", \"yes\"),\n                        location = c(rep(\"A\", 7), rep(\"B\", 5)))\n    weather\n```\n\nThink: How might we modify the below bar plot of `location` to distinguish between days on which it did or didn't rain?\nEach category, A and B, are associated with whether or not it didn't rain. It doesn't tell us the pattern of rain during the week.\n\n```{r}\nggplot(weather, aes(x = location)) +\n      geom_bar()\n```\n\n\n\n### General guidance for building bivariate plots\n\nAs with univariate plots, an appropriate visualization for the relationship between 2 variables depends upon whether the variables are **quantitative** or **categorical**. In general:\n\n-   Each **quantitative variable** requires a new *axis* (or a quantitative *scale* if we run out of axes).\n-   Each **categorical variable** requires a new way to \"group\" the graphic (eg: using colors, shapes, separate facets, etc)\n-   For visualizations in which **overlap** in glyphs or plots obscures the patterns, try faceting or transparency.\n\n\n## Exercises (required)\n\n[Github user Tony McGovern](https://github.com/tonmcg/US_County_Level_Election_Results_08-20) has compiled and made available 2020/2016/2012 presidential election results for most of 3000+ U.S. counties, except Alaska. (Image: [Wikimedia Commons](https://commons.wikimedia.org/wiki/File:Map_of_USA_with_county_outlines_(black_%26_white).png))\n\n![](https://upload.wikimedia.org/wikipedia/commons/6/68/Map_of_USA_with_county_outlines_%28black_%26_white%29.png)\n\nA wrangled version of this data, is imported below, after being combined with:\n\n-   2013 county-level demographics from the `df_county_demographics` data set from the `choroplethr` R package\n-   historical voting trends in the state in which the county falls (from <https://www.270towin.com/content/blue-and-red-states>):\n    - red = consistently Republican\n    - blue = consistently Democratic\n    - purple = something in between\n\n```{r}\n# Load data\nelections <- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n# Check it out\nhead(elections)\n```\n\nWe'll use this data to explore voting outcomes within the U.S.'s 2-party system. Here's a list of candidates by year:\n\n| year | Republican candidate | Democratic candidate |\n|:-----|:---------------------|:---------------------|\n| 2020 | Donald Trump         | Joe Biden            |\n| 2016 | Donald Trump         | Hillary Clinton      |\n| 2012 | Mitt Romney          | Barack Obama         |\n\n\n\n### Exercise 0: Review {.unnumbered}\n\n#### Part a {.unnumbered}\n\nHow many, or roughly what percent, of the 3000+ counties did the Republican candidate win in 2020?\n\n-   Take a guess.\n-   Then make a plot of the `winner` variable.\n-   Then discuss what follow-up questions you might have (and that our data might help us answer).\n\n```{r}\nggplot(elections, aes(x = winner_20)) + \n  geom_bar()\n```\n\n#### Part b {.unnumbered}\n\nThe `repub_pct_20` variable provides more detail about the Republican support in each county. Construct a plot of `repub_pct_20`.\n\nNotice that the distribution of Republican support from county to county is slightly **left skewed** or **negatively skewed**.\n\nWhat follow-up questions do you have?\n\n```{r}\nggplot(elections, aes(x = repub_pct_20)) + \n  geom_histogram(color = \"white\")\n#What does democratic support look like? Can we compare?\n```\n\n\n### Exercise 1: Quantitative vs Quantitative Intuition Check {.unnumbered}\n\n::: {.callout-important title=\"Be Quick\"}\n\nDon't spend more than 3 minutes on this! \n\n:::\n\nBelow is a **scatterplot** of the Republican support in 2020 vs 2016. Notice that:\n\n-   both variables are quantitative, and get their own axes\n-   the *response* variable is on the y-axis, demonstrating how `repub_pct_20` might be predicted by `repub_pct_16`, not vice versa\n\nTry to replicate this using `ggplot()`. THINK:\n\n-   What info do you need to set up the canvas?\nNeed x and y axis labeled\n-   What geometric layer (`geom_???`) might add these dots / points for each county? We haven't learned this yet, just take some guesses.\ngeom point because it's a point plot?\n\n![](https://mac-stat.github.io/images/112/scatterplot_demo.png){width=\"50%\"}\n\n```{r}\n# point plot\nggplot (elections, aes(x = repub_pct_16, y = repub_pct_20)) + geom_point()\n```\n\n\n### Exercise 2: 2 Quantitiative Variables {.unnumbered}\n\nRun each chunk below to build up a a scatterplot of `repub_pct_20` vs `repub_pct_16` with different *glyphs* representing each county. Address or think about any prompts in the comments (`#`).\n\n```{r eval = FALSE}\n# Set up the plotting frame\n# How does this differ than the frame for our histogram of repub_pct_20 alone?\n# Both the x and y axis were labeled\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))\n```\n\n```{r eval = FALSE}\n# Add a layer of points for each county\n# Take note of the geom!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point()\n```\n\n```{r eval = FALSE}\n# Change the shape of the points\n# What happens if you change the shape to another number?\n# The dot changes from a dot to a plus\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(shape = 3)\n```\n\n```{r}\n# YOU TRY: Modify the code to make the points \"orange\"\n# NOTE: Try to anticipate if \"color\" or \"fill\" will be useful here. Then try both.\n# Use color not fill\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(color = \"orange\")\n```\n\n```{r eval = FALSE}\n# Add a layer that represents each county by the state it's in\n# Take note of the geom and the info it needs to run!\n# Need text plot instead of point. Then include aes and a label for the text.\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_text(aes(label = state_abbr))\n```\n\n\n### Exercise 3: Reflect {.unnumbered}\n\nSummarize the relationship between the Republican support in 2020 and 2016. Be sure to comment on:\n\n-   the strength of the relationship (weak/moderate/strong)\\\n-   the direction of the relationship (positive/negative)\\\n-   outliers (in what state do counties deviate from the national trend? Any ideas why this might be the case?)\n There was stronger republican support in 2016 than 2020. There are some places where republican support was way higher in 2020 than 2016.\n\n\n### Exercise 4: Visualizing trend {.unnumbered}\n\nThe trend of the relationship between `repub_pct_20` and `repub_pct_16` is clearly positive and (mostly) linear. We can highlight this trend by adding a model \"smooth\" to the plot:\n\n```{r eval = FALSE}\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth()\n```\n\n#### Part a {.unnumbered}\n\nConstruct a new plot that contains the model smooth but does *not* include the individual point glyphs.\n\n```{r}\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_smooth()\n```\n\n#### Part b {.unnumbered}\n\nBy default, `geom_smooth()` adds a smooth, localized model line. To examine the \"best\" *linear model*, we can specify `method = \"lm\"`. It's pretty similar in this example!\n\n```{r eval = FALSE}\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n\n### Exercise 5: Your Turn {.unnumbered}\n\nTo examine how the 2020 results are related to some county demographics, construct scatterplots of `repub_pct_20` vs `median_rent`, and `repub_pct_20` vs `median_age`. Summarize the relationship between these two variables and comment on which is the better predictor of `repub_pct_20`, `median_rent` or `median_age`.\n\n```{r}\n# Scatterplot of repub_pct_20 vs median_rent\nggplot(elections, aes(y = repub_pct_20, x = median_rent)) +\n  geom_point() \n\n\n# Scatterplot of repub_pct_20 vs median_age\nggplot(elections, aes (y = repub_pct_20, x = median_age)) + geom_point()\n\n\n```\n\n\n### Exercise 6: A Sad Scatterplot {.unnumbered}\n\nNext, let's explore the relationship between a county's 2020 Republican support `repub_pct_20` and the `historical` political trends in its state. In this case `repub_pct_20` is **quantitative**, but `historical` is **categorical**. Explain why a scatterplot might *not* be an effective visualization for exploring this relationship. (What questions does / doesn't it help answer?)\nIt looks more like a bar graph and doesn't distribute the the trends. This plot doesn't help us say anything.\n\n```{r}\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_point()\n```\n\n\n### Exercise 7: Quantitative vs Categorical -- Violins & Boxes {.unnumbered}\n\nThough the above scatterplot *did* group the counties by `historical` category, it's nearly impossible to pick out meaningful patterns in 2020 Republican support in each category. Let's try adding 2 different `geom` layers to the frame:\n\n```{r eval = FALSE}\n# Side-by-side violin plots\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_violin()\n```\n\n```{r eval = FALSE}\n# Side-by-side boxplots (defined below)\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_boxplot()\n```\n\nBox plots are constructed from five numbers - the minimum, 25th percentile, median, 75th percentile, and maximum value of a quantitative variable:\n\n![](https://mac-stat.github.io/images/112/boxplot.png){width=\"50%\"}\n\n**REFLECT:**\n\nSummarize what you've learned about the 2020 Republican county-level support within and between red/purple/blue states.\n\nThere's a huge range in county level support for republicans in red, blue, and purple states. However, more people in red states supported republican candidate in 2020. \n\n### Exercise 8: Quantitative vs Categorical -- Intuition Check {.unnumbered}\n\n::: {.callout-important title=\"Be Quick\"}\n\nDon't spend more than 3 minutes on this! \n\n:::\n\nWe can also visualize the relationship between `repub_pct_20` and `historical` using our familiar density plots. In the plot below, notice that we simply created a separate density plot for each `historical` category. (The plot itself is \"bad\" but we'll fix it below.) Try to adjust the code chunk below, which starts with a density plot of `repub_pct_20` alone, to re-create this image.\n\n![](https://mac-stat.github.io/images/112/density_demo.png){width=\"50%\"}\n\n```{r}\nggplot(elections, aes(x = repub_pct_20)) +\n  geom_density()\n```\n\n\n### Exercise 9: Quantitative vs Categorical -- Density Plots {.unnumbered}\n\nWork through the chunks below and address the comments therein.\n\n```{r eval = FALSE}\n# Name two \"bad\" things about this plot\n# The colors don't correspond with the labels (which are also colors)\n# The data blocks other data.\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density()\n```\n\n```{r eval = FALSE}\n# What does scale_fill_manual do?\n# These functions allow you to specify your own set of mappings from levels in the data to aesthetic values.\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n```\n\n```{r eval = FALSE}\n# What does alpha = 0.5 do?\n# Play around with different values of alpha, between 0 and 1\n# Alpha values make the data see through\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density(alpha = 0.5) +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n```\n\n```{r eval = FALSE}\n# What does facet_wrap do?!\n# Facet wrap makes three separate graphs.\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\")) +\n  facet_wrap(~ historical)\n```\n\n```{r eval = FALSE}\n# Let's try a similar grouping strategy with a histogram instead of density plot.\n# Why is this terrible?\n#Still can't really see the data\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_histogram(color = \"white\") +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n```\n\n\n### Exercise 10 {.unnumbered}\n\nWe've now learned 3 (of many) ways to visualize the relationship between a quantitative and categorical variable: side-by-side violins, boxplots, and density plots.\n\n-   Which do you like best?\nIt depends on what kind of data I'm trying to represent. I think I like the overall look of a density plot but it's totally dependent on which showcases the data best\n-   What is one pro of density plots relative to boxplots?\nDoesn't over simplify the data\n-   What is one con of density plots relative to boxplots?\nBoxplots can be easier to interpret quickly\n\n### Exercise 11: Categorical vs Categorical -- Intuition Check {.unnumbered}\n\nFinally, let's simply explore who *won* each county in 2020 (`winner_20`) and how this breaks down by `historical` voting trends in the state. That is, let's explore the relationship between 2 categorical variables! Following the same themes as above, we can utilize grouping features such as fill/color or facets to distinguish between different categories of `winner_20` and `historical`.\n\n::: {.callout-important title=\"Be Quick\"}\n\nSpend at most 5 minutes on the following intuition check. Adjust the code below to recreate the following two plots.\n\n:::\n\nUnsure how to proceed. \n\n![](https://mac-stat.github.io/images/112/barplot_demo.png){width=\"60%\"}\n\n```{r}\n# Plot 1: adjust this to recreate the top plot\nggplot(elections, aes(x = historical)) +\n  geom_bar()\n```\n\n```{r}\n# Plot 2: adjust this to recreate the bottom plot\nggplot(elections, aes(x = winner_20)) +\n  geom_bar()\n```\n\n\n### Exercise 12: Categorical vs Categorical {.unnumbered}\n\nConstruct the following 4 bar plot visualizations.\n\n```{r eval = FALSE}\n# A stacked bar plot\n# How are the \"historical\" and \"winner_20\" variables mapped to the plot, i.e. what roles do they play?\n#Historical shows the blue, red, and purple history and the winner shows the results in 2020.\n#Is this the number of counties that went red vs blue in 2020? It's hard to see who actually won.\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar()\n```\n\n```{r eval = FALSE}\n# A faceted bar plot\nggplot(elections, aes(x = winner_20)) +\n  geom_bar() +\n  facet_wrap(~ historical)\n```\n\n```{r eval = FALSE}\n# A side-by-side bar plot\n# Note the new argument to geom_bar, dodge means that they are next to each other not layered on top\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"dodge\")\n```\n\n```{r eval = FALSE}\n# A proportional bar plot\n# Note the new argument to geom_bar, fill means that each bar adds up to 1, easy to compare. \nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"fill\")\n```\n\n#### Part a {.unnumbered}\n\nName one pro and one con of using the \"proportional bar plot\" instead of one of the other three options.\nEasy to compare the values of republican versus democrat but it's hard to understand the counties themselves and where they fall in the data. \n\n#### Part b {.unnumbered}\n\nWhat's your favorite bar plot from part and why?\nI like the dodge bar because it's easy to understand and the data is side by side. \n\n### Exercise 13: Practice (now or later) {.unnumbered}\n\n::: {.callout-important title=\"Decide\"}\n\nDecide what's best for you:\n\n-   Try this extra practice now.\n-   Reflect on the above exercises and come back to this extra practice later (but before the next class).\n\n:::\n\nImport some daily weather data from a few locations in Australia:\n\n```{r}\nweather <- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\")\n```\n\nConstruct plots that address the research questions in each chunk. You might make multiple plots--there are many ways to do things!. However, don't just throw spaghetti at the wall.\n\nReflect before doing anything. What types of variables are these? How might you plot just 1 of the variables, and then tweak the plot to incorporate the other?\n\n```{r}\n# How do 3pm temperatures (temp3pm) differ by location?\n\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5)\n\nggplot(weather, aes(y = temp3pm, x = location)) + \n  geom_boxplot()\n```\n\n```{r}\n# How might we predict the 3pm temperature (temp3pm) by the 9am temperature (temp9am)?\nggplot(weather, aes(y = temp3pm, x = temp9am)) + \n  geom_point()\n\n```\n\n```{r}\n# How do the number of rainy days (raintoday) differ by location?\nggplot(weather, aes(x = location, fill = raintoday)) + \n  geom_bar()\n```\n\n\n## Exercises (optional)\n\nThe above visualizations are foundational and important. But they're not the only way to visualize the variables in our dataset.\n\n### Optional Exercise 1: Many Categories {.unnumbered}\n\nSuppose we wanted to better understand how the 2020 Republican support varied from county to county within each **state**. Since `repub_pct_20` is quantitative and `state_abbr` is categorical, we *could* make a density plot of `repub_pct_20` for each state. Reflect on why this is bad.\n\n```{r}\nggplot(elections, aes(x = repub_pct_20, fill = state_abbr)) + \n  geom_density(alpha = 0.5)\n```\n\nA facet wrap would also be bad!\n\n```{r fig.width = 8, fig.height = 8}\nggplot(elections, aes(x = repub_pct_20)) + \n  geom_density(alpha = 0.5) + \n  facet_wrap(~ state_abbr)\n```\n\nWhen we want to compare the distribution of some quantitative outcome among *many* groups / categories, a **ridgeline plot** can be a good option. These are also called **joy plots**, named after the album cover for \"Unknown Pleasures\" by Joy Division. (Look it up!) To make a ridgeline plot, we can use the `geom_density_ridges()` function from the `ggridges` package.\n\n```{r fig.height = 10, fig.width = 8, eval = FALSE}\n# Install ggridges package\nlibrary(ggridges)\n\n# Make our first joy plot\n# THINK: What DON'T you like about this?\n# I have no idea what the data is representing, hard to understand\nggplot(elections, aes(x = repub_pct_20, y = state_abbr)) + \n  geom_density_ridges()\n```\n\n```{r fig.height = 10, fig.width = 8, eval = FALSE}\n# Let's put the states in order by Republican support, not alphabet\n# How do you think fct_reorder works? We'll learn about this later in the semester.\n#Most republican states at the top, least republican states at the bottom?\nggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + \n  geom_density_ridges(alpha = 0.5)\n```\n\n\n**Follow-up questions**\n\n-   Which states tend to have the most variability in outcomes from county to county? The least?\n-   What other interesting patterns do you notice?\n-   Does this plot prompt any other questions?\n\n\n### Optional Exercise 2: Total Outcomes by State {.unnumbered}\n\nLet's import some new data and counts up the total votes (Republican and Democratic) by state, not county. This was **wrangled** from the elections data!\n\n```{r}\nelections_by_state <- read.csv(\"https://mac-stat.github.io/data/election_2020_by_state.csv\")\n```\n\nFor example, we might make a scatterplot of the 2020 vs 2016 outcomes:\n\n```{r}\nggplot(elections_by_state, aes(y = repub_pct_20, x = repub_pct_16)) + \n  geom_point()\n```\n\nBUT this isn't the easiest way to communicate or identify the changes from 1 year to the next.\n\n```{r fig.height = 10, fig.width = 8}\n# YOU TRY\n# Start by creating a \"scatterplot\" of state_abbr (y-axis) by 2020 Republican support on the x-axis\n# Color the points red\n# Scroll to solutions below when you're ready\n\n\n```\n\n```{r fig.height = 10, fig.width = 8}\n# Check it out\nggplot(elections_by_state, aes(x = repub_pct_20, y = state_abbr)) + \n  geom_point(color = \"red\")\n```\n\n```{r fig.height = 10, fig.width = 8}\n# YOU TRY\n# Reorder the states in terms of their 2020 Republican support (not alphabet)\n# Scroll to solutions below when you're ready\n\n\n```\n\n```{r fig.height = 10, fig.width = 8}\n# Check it out\nggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + \n  geom_point(color = \"red\")\n```\n\n```{r fig.height = 10, fig.width = 8}\n# Finally, add ANOTHER layer of points for the 2016 outcomes\n# What info does this new geom_point() layer need to run?\nggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + \n  geom_point(color = \"red\") + \n  geom_point(aes(x = repub_pct_16, y = state_abbr))\n```\n\n**Reflect on the following**\n\n-   What do you think this plot needs? Try it! You might need to do some digging online.\n-   Summarize the main takeaways from the plots. Which states changed the most from 2016 to 2020? The least? Where did the Republican support increase? Where did it decrease?\n-   What other questions are you left with?\n\n\n::: content-hidden\n## Wrap-up\n\nToday's activity:\n\n-   Knit when you're done.\n-   If you're working on Mac's server, remember to download and store both the .Rmd and .html on your computer.\n-   If you didn't finish in class, no problem. Finish up outside of class and check solutions in the online manual.\n\nHomework plan:\n\n-   The data viz unit will have 2 homeworks.\\\n    Homework 2 will largely be drill / practice with some guiding prompts. Homework 3 will be provide more experience working in open-ended settings.\n-   Homework 2 is due in 9 days, but you should chip away at it slowly so that you have time to absorb and ask questions. It's not designed to finish in 1 sitting.\n\nMSCS listserv:\n\nIf you’re an MSCS major / minor, or plan to be, I strongly encourage you to sign up for the [MSCS community listserv](https://docs.google.com/document/d/1Z2Ex-_z_8vm2ZhgdT4le-DwieUCtYZM8dDysaj6bseI/edit). This is where we share information about department events, internships opportunities, etc.\n\n:::\n\n## Solutions\n\n<details>\n\n<summary>Click for Solutions</summary>\n\n```{r}\n# Import data\nsurvey <- read.csv(\"https://ajohns24.github.io/data/112/about_us_2024.csv\")\n\n# How many students have now filled out the survey?\nnrow(survey)\n\n# What type of variables do we have?\nstr(survey)\n```\n\n\n\n**EXAMPLE 1: Hangout preferences**\n\n```{r}\n# Attach a package needed to use the ggplot function\nlibrary(tidyverse)\n\n# Make a ggplot\nggplot(survey, aes(x = hangout)) + \n  geom_bar()\n```\n\n\n\n**EXAMPLE 2: Temperature preferences**\n\n```{r}\nggplot(survey, aes(x = fave_temp)) + \n  geom_histogram(color = \"white\", binwidth = 5)\n\nggplot(survey, aes(x = fave_temp)) + \n  geom_density()\n```\n\n\n\n### Exercise 0:\n\n```{r}\nggplot(elections, aes(x = winner_20)) + \n  geom_bar()\nggplot(elections, aes(x = repub_pct_20)) + \n  geom_histogram(color = \"white\")\nggplot(elections, aes(x = repub_pct_20)) + \n  geom_density()\n```\n\n### Exercise 1: quantitative vs quantitative intuition check {.unnumbered}\n\nSee next exercise.\n\n\n### Exercise 2: 2 quantitiative variables {.unnumbered}\n\n```{r}\n# Set up the plotting frame\n# How does this differ than the frame for our histogram of repub_pct_20 alone?\n# ANSWER: we added a y-axis variable\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))\n\n# Add a layer of points for each county\n# Take note of the geom: geom_point\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point()\n\n# Change the shape of the points\n# What happens if you change the shape to another number?\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(shape = 3)\n\n# YOU TRY: Modify the code to make the points \"orange\"\n# NOTE: Try to anticipate if \"color\" or \"fill\" will be useful here. Then try both.\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(color = \"orange\")\n\n\n# Add a layer that represents each county by the state it's in\n# Take note of the geom and the info it needs to run!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_text(aes(label = state_abbr))\n```\n\n\n### Exercise 3: Reflect {.unnumbered}\n\nThere's a strong, positive association -- the higher the Republican support in 2016, the higher it was in 2020. There are some counties in Texas and Utah where the R support in 2020 was disproportionately higher than in 2016.\n\n\n### Exercise 4: Visualizing trend {.unnumbered}\n\n```{r}\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth()\n```\n\n#### Part a {.unnumbered}\n\n```{r}\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_smooth()\n```\n\n#### Part b {.unnumbered}\n\n```{r}\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n\n### Exercise 5: Your turn {.unnumbered}\n\nThere's a moderate, positive association between R support and median age -- the older the average age in a county, the higher the R support tends to be. However, there's a stronger, *negative* association between R support and median rent -- the higher the rent (a proxy for cost of living), the lower the R support tends to be.\n\n```{r}\n# Scatterplot of repub_pct_20 vs median_rent\nggplot(elections, aes(y = repub_pct_20, x = median_rent)) +\n  geom_point() \n\n# Scatterplot of repub_pct_20 vs median_age\nggplot(elections, aes(y = repub_pct_20, x = median_age)) +\n  geom_point() \n\n\n```\n\n\n### Exercise 6: A sad scatterplot {.unnumbered}\n\nSee next exercise.\n\n\n### Exercise 7: quantitative vs categorical -- violins & boxes {.unnumbered}\n\n```{r }\n# Side-by-side violin plots\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_violin()\n\n# Side-by-side boxplots (defined below)\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_boxplot()\n```\n\n**REFLECT:**\n\nThere's quite a bit of range in county-level R support within blue, purple, and red states. However, R support tends to be higher in red states and lower in blue states.\n\n\n### Exercise 8: quantitative vs categorical -- intuition check {.unnumbered}\n\nSee next exercise.\n\n\n### Exercise 9: quantitative vs categorical -- density plots {.unnumbered}\n\n```{r}\n# The colors used don't match up with the blue, purple, red labels\n# The density plots are on top of each other\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density()\n\n# scale_fill_manual \"hard codes\" or defines what colors to use for the fill categories\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n# alpha = 0.5 adds transparency\n# the closer alpha is to 0, the more transparent.\n# the closer alpha is to 1, the more opaque.\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density(alpha = 0.5) +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n# facet_wrap separates the density plots into \"facets\" for each historical group\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\")) +\n  facet_wrap(~ historical)\n\n# Let's try a similar grouping strategy with a histogram instead of density plot.\n# Why is this terrible?\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_histogram(color = \"white\") +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n```\n\n\n### Exercise 10 {.unnumbered}\n\n-   One pro of density plots relative to boxplots: doesn't oversimplify the data / boil the data down to just 5 numbers.\n\n-   Name one con of density plots relative to boxplots: boxplots can be easier to interpret\n\n\n### Exercise 11: categorical vs categorical intuition check {.unnumbered}\n\nsee exercise below\n\n\n### Exercise 12: categorical vs categorical {.unnumbered}\n\n```{r}\n# A stacked bar plot\n# historical = x axis / bar categories\n# winner_20 = fills the bars\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar()\n\n# A faceted bar plot\nggplot(elections, aes(x = winner_20)) +\n  geom_bar() +\n  facet_wrap(~ historical)\n\n# A side-by-side bar plot\n# Note the new argument to geom_bar\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"dodge\")\n\n# A proportional bar plot\n# Note the new argument to geom_bar\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"fill\")\n```\n\n#### Part a {.unnumbered}\n\npro = easier to compare the relative outcomes in blue vs purple vs red states con = lose track of how many counties fall into blue vs purple vs red states\n\n\n### Exercise 13: Practice (now or later) {.unnumbered}\n\n```{r}\nweather <- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\")\n\n# How do 3pm temperatures (temp3pm) differ by location?\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5)\nggplot(weather, aes(y = temp3pm, x = location)) + \n  geom_boxplot()\n\n# How might we predict the 3pm temperature (temp3pm) by the 9am temperature (temp9am)?\nggplot(weather, aes(y = temp3pm, x = temp9am)) + \n  geom_point()\n\n# How do the number of rainy days (raintoday) differ by location?\nggplot(weather, aes(x = location, fill = raintoday)) + \n  geom_bar()\n```\n\n### Optional exercise 1: Dealing with lots of categories {.unnumbered}\n\n```{r fig.height = 10, fig.width = 8}\n# Install ggridges package\nlibrary(ggridges)\n\n# Make our first joy plot\n# THINK: What DON'T you like about this?\nggplot(elections, aes(x = repub_pct_20, y = state_abbr)) + \n  geom_density_ridges()\n\n# Let's put the states in order by Republican support, not alphabet\n# How do you think fct_reorder works? We'll learn about this later in the semester.\nggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + \n  geom_density_ridges(alpha = 0.5)\n\n# YOUR TURN: color/fill the ridges according to a state's historical voting patterns \n# and add meaningful axis labels\nggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20), fill = historical)) + \n  geom_density_ridges(alpha = 0.5) + \n  labs(y = \"state\", x = \"2020 Republican support (%)\") + \n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n```\n\n\n### Optional exercise 2: total outcomes by state {.unnumbered}\n\n```{r fig.height = 10, fig.width = 8}\nelections_by_state <- read.csv(\"https://mac-stat.github.io/data/election_2020_by_state.csv\")\n\nggplot(elections_by_state, aes(y = repub_pct_20, x = repub_pct_16)) + \n  geom_point()\n\n# YOU TRY\n# Start by creating a \"scatterplot\" of state_abbr (y-axis) by 2020 Republican support on the x-axis\n# Color the points red\nggplot(elections_by_state, aes(x = repub_pct_20, y = state_abbr)) + \n  geom_point(color = \"red\")\n\n# YOU TRY\n# Reorder the states in terms of their 2020 Republican support (not alphabet)\nggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + \n  geom_point(color = \"red\")\n\n# Finally, add ANOTHER layer of points for the 2016 outcomes\n# What info does this new geom_point() layer need to run?\nggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + \n  geom_point(color = \"red\") + \n  geom_point(aes(x = repub_pct_16, y = state_abbr))\n```\n\n</details>\n","srcMarkdownNoYaml":"\n\nUse this file for practice with the **bivariate viz** in-class activity.  Refer to the class website for details.\n\n## Review\n\nLet's review some *univariate* concepts and code using our class survey data. If the answers aren't at the top of your mind, don't fret! We've barely started speaking this new language, and learned a ton of vocab last week, so you naturally won't remember it all.\n\n```{r}\n# Import data\nsurvey <- read.csv(\"https://ajohns24.github.io/data/112/about_us_2024.csv\")\n\n# How many students have now filled out the survey?\nnrow(survey)\n\n# What type of variables do we have?\nstr(survey)\n```\n\n### EXAMPLE 1: Hangout Preferences {-}\n\nStudents were asked, in that moment, where they'd most like to spend time outside. How did they answer? Was there a lot of agreement or a lot of variability in answers? Build and interpret a plot that helps address these questions while reviewing:\n\n-   \"code as communication\"\n-   connecting with the components of a plot:\n    -   set up a **frame**\n    -   add a **layer** / geometric element\n    -   change the **theme**, e.g. axis labels, color, fill\n\n```{r}\n# Attach a package needed to use the ggplot function\nlibrary(tidyverse)\n\n# Make a ggplot\nggplot(survey, aes(x=hangout)) + geom_bar()\n```\n\n```{r echo=FALSE, message=FALSE}\nlibrary(tidyverse)\n```\n\n\n### EXAMPLE 2: Temperature Preferences {-}\n\nStudents were asked about their ideal outdoor temperature, in degrees Celsius. How did they answer? What was the typical response? What was the range in responses? Were there any outliers? Build and interpret 2 plots that help address these questions.\n\n```{r}\nggplot(survey, aes(x = fave_temp)) + \n  geom_histogram(color = \"white\", binwidth = 5)\n```\n```{r}\nggplot(survey, aes(x = fave_temp)) + \n  geom_density()\n```\n\n\n\n::: {.callout-note title=\"Bar Charts vs. Histograms\"}\nBar charts & histograms can appear pretty similar, but they do different things.\n\n-   **Bar charts** count up the number of observations of each outcome of a variable. They're good for *categorical* variables, or *quantitative* variables with only a handful of possible outcomes.\n-   **Histograms** count up the number of observations that fall into different numerical *ranges* of variable. They're good for *quantitative* variables, especially those with many different observed outcomes.\n:::\n\n\n\n## New stuff\n\nThus far, we've been studying one variable at a time, using *univariate* plots. But once we get a sense of how individual variables behave on their own, our questions often turn to *relationships* among variables. For example, in our `hikes` data:\n\n-   How much `time` does it take to complete a hike? ------\\> How is `time` related to a hike's `elevation`? What about its `length`?\n-   How does difficult `rating` vary from hike to hike? -------\\> How is difficulty `rating` related to a hike's `ascent`?\n\n\n### Exploring relationships\n\nExploring univariate patterns often sparks follow-up questions about **relationships** between 2+ variables. Often, but not always, variables take on specific roles:\n\n-   **response variable**: the variable whose variability we would like to explain (`time` to complete a hike)\n-   **predictors**: variables that might explain some of the variability in the response (a hike's `elevation` or `length`)\n\nVisualizations can help explore:\n\n-   relationship *trends* (direction and form)\n-   relationship *strength* (degree of variability from the trend)\n-   *outliers* in the relationship\n\n#### EXAMPLE 3 {-}\n\nFor each pair of variables below, sketch on paper a visualization of their relationship. Focus on general viz process, don't worry about the exact details. The data here are totally made up.\n\n  a.  3pm temperature (response) vs 9am temperature (predictor)\n\n```{r}\ndata.frame(temp_3pm = c(24, 26, 20, 15, 15, 15), temp_9am = c(14, 18, 15, 13, 11, 11))\n```\n\n  b.  3pm temperature (response) vs location (predictor)\n\n```{r}\nweather <- data.frame(temp_3pm = c(24, 26, 20, 15, 15, 0, 40, 60, 57, 44, 51, 75),\n                      location = rep(c(\"A\", \"B\"), each = 6))\nweather\n```\n\nThink: How might we modify the below density plot of `temp_3pm` to distinguish between locations?\n\n```{r}\nggplot(weather, aes(x = temp_3pm)) +\n      geom_density()\n```\n\nc.  `rain_today` (the response) and `location` (the predictor)\n\n```{r}\nweather <- data.frame(rain_today = c(\"no\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"yes\", \"no\", \"yes\", \"yes\", \"no\", \"yes\"),\n                        location = c(rep(\"A\", 7), rep(\"B\", 5)))\n    weather\n```\n\nThink: How might we modify the below bar plot of `location` to distinguish between days on which it did or didn't rain?\nEach category, A and B, are associated with whether or not it didn't rain. It doesn't tell us the pattern of rain during the week.\n\n```{r}\nggplot(weather, aes(x = location)) +\n      geom_bar()\n```\n\n\n\n### General guidance for building bivariate plots\n\nAs with univariate plots, an appropriate visualization for the relationship between 2 variables depends upon whether the variables are **quantitative** or **categorical**. In general:\n\n-   Each **quantitative variable** requires a new *axis* (or a quantitative *scale* if we run out of axes).\n-   Each **categorical variable** requires a new way to \"group\" the graphic (eg: using colors, shapes, separate facets, etc)\n-   For visualizations in which **overlap** in glyphs or plots obscures the patterns, try faceting or transparency.\n\n\n## Exercises (required)\n\n[Github user Tony McGovern](https://github.com/tonmcg/US_County_Level_Election_Results_08-20) has compiled and made available 2020/2016/2012 presidential election results for most of 3000+ U.S. counties, except Alaska. (Image: [Wikimedia Commons](https://commons.wikimedia.org/wiki/File:Map_of_USA_with_county_outlines_(black_%26_white).png))\n\n![](https://upload.wikimedia.org/wikipedia/commons/6/68/Map_of_USA_with_county_outlines_%28black_%26_white%29.png)\n\nA wrangled version of this data, is imported below, after being combined with:\n\n-   2013 county-level demographics from the `df_county_demographics` data set from the `choroplethr` R package\n-   historical voting trends in the state in which the county falls (from <https://www.270towin.com/content/blue-and-red-states>):\n    - red = consistently Republican\n    - blue = consistently Democratic\n    - purple = something in between\n\n```{r}\n# Load data\nelections <- read.csv(\"https://mac-stat.github.io/data/election_2020_county.csv\")\n\n# Check it out\nhead(elections)\n```\n\nWe'll use this data to explore voting outcomes within the U.S.'s 2-party system. Here's a list of candidates by year:\n\n| year | Republican candidate | Democratic candidate |\n|:-----|:---------------------|:---------------------|\n| 2020 | Donald Trump         | Joe Biden            |\n| 2016 | Donald Trump         | Hillary Clinton      |\n| 2012 | Mitt Romney          | Barack Obama         |\n\n\n\n### Exercise 0: Review {.unnumbered}\n\n#### Part a {.unnumbered}\n\nHow many, or roughly what percent, of the 3000+ counties did the Republican candidate win in 2020?\n\n-   Take a guess.\n-   Then make a plot of the `winner` variable.\n-   Then discuss what follow-up questions you might have (and that our data might help us answer).\n\n```{r}\nggplot(elections, aes(x = winner_20)) + \n  geom_bar()\n```\n\n#### Part b {.unnumbered}\n\nThe `repub_pct_20` variable provides more detail about the Republican support in each county. Construct a plot of `repub_pct_20`.\n\nNotice that the distribution of Republican support from county to county is slightly **left skewed** or **negatively skewed**.\n\nWhat follow-up questions do you have?\n\n```{r}\nggplot(elections, aes(x = repub_pct_20)) + \n  geom_histogram(color = \"white\")\n#What does democratic support look like? Can we compare?\n```\n\n\n### Exercise 1: Quantitative vs Quantitative Intuition Check {.unnumbered}\n\n::: {.callout-important title=\"Be Quick\"}\n\nDon't spend more than 3 minutes on this! \n\n:::\n\nBelow is a **scatterplot** of the Republican support in 2020 vs 2016. Notice that:\n\n-   both variables are quantitative, and get their own axes\n-   the *response* variable is on the y-axis, demonstrating how `repub_pct_20` might be predicted by `repub_pct_16`, not vice versa\n\nTry to replicate this using `ggplot()`. THINK:\n\n-   What info do you need to set up the canvas?\nNeed x and y axis labeled\n-   What geometric layer (`geom_???`) might add these dots / points for each county? We haven't learned this yet, just take some guesses.\ngeom point because it's a point plot?\n\n![](https://mac-stat.github.io/images/112/scatterplot_demo.png){width=\"50%\"}\n\n```{r}\n# point plot\nggplot (elections, aes(x = repub_pct_16, y = repub_pct_20)) + geom_point()\n```\n\n\n### Exercise 2: 2 Quantitiative Variables {.unnumbered}\n\nRun each chunk below to build up a a scatterplot of `repub_pct_20` vs `repub_pct_16` with different *glyphs* representing each county. Address or think about any prompts in the comments (`#`).\n\n```{r eval = FALSE}\n# Set up the plotting frame\n# How does this differ than the frame for our histogram of repub_pct_20 alone?\n# Both the x and y axis were labeled\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))\n```\n\n```{r eval = FALSE}\n# Add a layer of points for each county\n# Take note of the geom!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point()\n```\n\n```{r eval = FALSE}\n# Change the shape of the points\n# What happens if you change the shape to another number?\n# The dot changes from a dot to a plus\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(shape = 3)\n```\n\n```{r}\n# YOU TRY: Modify the code to make the points \"orange\"\n# NOTE: Try to anticipate if \"color\" or \"fill\" will be useful here. Then try both.\n# Use color not fill\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(color = \"orange\")\n```\n\n```{r eval = FALSE}\n# Add a layer that represents each county by the state it's in\n# Take note of the geom and the info it needs to run!\n# Need text plot instead of point. Then include aes and a label for the text.\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_text(aes(label = state_abbr))\n```\n\n\n### Exercise 3: Reflect {.unnumbered}\n\nSummarize the relationship between the Republican support in 2020 and 2016. Be sure to comment on:\n\n-   the strength of the relationship (weak/moderate/strong)\\\n-   the direction of the relationship (positive/negative)\\\n-   outliers (in what state do counties deviate from the national trend? Any ideas why this might be the case?)\n There was stronger republican support in 2016 than 2020. There are some places where republican support was way higher in 2020 than 2016.\n\n\n### Exercise 4: Visualizing trend {.unnumbered}\n\nThe trend of the relationship between `repub_pct_20` and `repub_pct_16` is clearly positive and (mostly) linear. We can highlight this trend by adding a model \"smooth\" to the plot:\n\n```{r eval = FALSE}\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth()\n```\n\n#### Part a {.unnumbered}\n\nConstruct a new plot that contains the model smooth but does *not* include the individual point glyphs.\n\n```{r}\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_smooth()\n```\n\n#### Part b {.unnumbered}\n\nBy default, `geom_smooth()` adds a smooth, localized model line. To examine the \"best\" *linear model*, we can specify `method = \"lm\"`. It's pretty similar in this example!\n\n```{r eval = FALSE}\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n\n### Exercise 5: Your Turn {.unnumbered}\n\nTo examine how the 2020 results are related to some county demographics, construct scatterplots of `repub_pct_20` vs `median_rent`, and `repub_pct_20` vs `median_age`. Summarize the relationship between these two variables and comment on which is the better predictor of `repub_pct_20`, `median_rent` or `median_age`.\n\n```{r}\n# Scatterplot of repub_pct_20 vs median_rent\nggplot(elections, aes(y = repub_pct_20, x = median_rent)) +\n  geom_point() \n\n\n# Scatterplot of repub_pct_20 vs median_age\nggplot(elections, aes (y = repub_pct_20, x = median_age)) + geom_point()\n\n\n```\n\n\n### Exercise 6: A Sad Scatterplot {.unnumbered}\n\nNext, let's explore the relationship between a county's 2020 Republican support `repub_pct_20` and the `historical` political trends in its state. In this case `repub_pct_20` is **quantitative**, but `historical` is **categorical**. Explain why a scatterplot might *not* be an effective visualization for exploring this relationship. (What questions does / doesn't it help answer?)\nIt looks more like a bar graph and doesn't distribute the the trends. This plot doesn't help us say anything.\n\n```{r}\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_point()\n```\n\n\n### Exercise 7: Quantitative vs Categorical -- Violins & Boxes {.unnumbered}\n\nThough the above scatterplot *did* group the counties by `historical` category, it's nearly impossible to pick out meaningful patterns in 2020 Republican support in each category. Let's try adding 2 different `geom` layers to the frame:\n\n```{r eval = FALSE}\n# Side-by-side violin plots\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_violin()\n```\n\n```{r eval = FALSE}\n# Side-by-side boxplots (defined below)\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_boxplot()\n```\n\nBox plots are constructed from five numbers - the minimum, 25th percentile, median, 75th percentile, and maximum value of a quantitative variable:\n\n![](https://mac-stat.github.io/images/112/boxplot.png){width=\"50%\"}\n\n**REFLECT:**\n\nSummarize what you've learned about the 2020 Republican county-level support within and between red/purple/blue states.\n\nThere's a huge range in county level support for republicans in red, blue, and purple states. However, more people in red states supported republican candidate in 2020. \n\n### Exercise 8: Quantitative vs Categorical -- Intuition Check {.unnumbered}\n\n::: {.callout-important title=\"Be Quick\"}\n\nDon't spend more than 3 minutes on this! \n\n:::\n\nWe can also visualize the relationship between `repub_pct_20` and `historical` using our familiar density plots. In the plot below, notice that we simply created a separate density plot for each `historical` category. (The plot itself is \"bad\" but we'll fix it below.) Try to adjust the code chunk below, which starts with a density plot of `repub_pct_20` alone, to re-create this image.\n\n![](https://mac-stat.github.io/images/112/density_demo.png){width=\"50%\"}\n\n```{r}\nggplot(elections, aes(x = repub_pct_20)) +\n  geom_density()\n```\n\n\n### Exercise 9: Quantitative vs Categorical -- Density Plots {.unnumbered}\n\nWork through the chunks below and address the comments therein.\n\n```{r eval = FALSE}\n# Name two \"bad\" things about this plot\n# The colors don't correspond with the labels (which are also colors)\n# The data blocks other data.\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density()\n```\n\n```{r eval = FALSE}\n# What does scale_fill_manual do?\n# These functions allow you to specify your own set of mappings from levels in the data to aesthetic values.\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n```\n\n```{r eval = FALSE}\n# What does alpha = 0.5 do?\n# Play around with different values of alpha, between 0 and 1\n# Alpha values make the data see through\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density(alpha = 0.5) +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n```\n\n```{r eval = FALSE}\n# What does facet_wrap do?!\n# Facet wrap makes three separate graphs.\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\")) +\n  facet_wrap(~ historical)\n```\n\n```{r eval = FALSE}\n# Let's try a similar grouping strategy with a histogram instead of density plot.\n# Why is this terrible?\n#Still can't really see the data\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_histogram(color = \"white\") +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n```\n\n\n### Exercise 10 {.unnumbered}\n\nWe've now learned 3 (of many) ways to visualize the relationship between a quantitative and categorical variable: side-by-side violins, boxplots, and density plots.\n\n-   Which do you like best?\nIt depends on what kind of data I'm trying to represent. I think I like the overall look of a density plot but it's totally dependent on which showcases the data best\n-   What is one pro of density plots relative to boxplots?\nDoesn't over simplify the data\n-   What is one con of density plots relative to boxplots?\nBoxplots can be easier to interpret quickly\n\n### Exercise 11: Categorical vs Categorical -- Intuition Check {.unnumbered}\n\nFinally, let's simply explore who *won* each county in 2020 (`winner_20`) and how this breaks down by `historical` voting trends in the state. That is, let's explore the relationship between 2 categorical variables! Following the same themes as above, we can utilize grouping features such as fill/color or facets to distinguish between different categories of `winner_20` and `historical`.\n\n::: {.callout-important title=\"Be Quick\"}\n\nSpend at most 5 minutes on the following intuition check. Adjust the code below to recreate the following two plots.\n\n:::\n\nUnsure how to proceed. \n\n![](https://mac-stat.github.io/images/112/barplot_demo.png){width=\"60%\"}\n\n```{r}\n# Plot 1: adjust this to recreate the top plot\nggplot(elections, aes(x = historical)) +\n  geom_bar()\n```\n\n```{r}\n# Plot 2: adjust this to recreate the bottom plot\nggplot(elections, aes(x = winner_20)) +\n  geom_bar()\n```\n\n\n### Exercise 12: Categorical vs Categorical {.unnumbered}\n\nConstruct the following 4 bar plot visualizations.\n\n```{r eval = FALSE}\n# A stacked bar plot\n# How are the \"historical\" and \"winner_20\" variables mapped to the plot, i.e. what roles do they play?\n#Historical shows the blue, red, and purple history and the winner shows the results in 2020.\n#Is this the number of counties that went red vs blue in 2020? It's hard to see who actually won.\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar()\n```\n\n```{r eval = FALSE}\n# A faceted bar plot\nggplot(elections, aes(x = winner_20)) +\n  geom_bar() +\n  facet_wrap(~ historical)\n```\n\n```{r eval = FALSE}\n# A side-by-side bar plot\n# Note the new argument to geom_bar, dodge means that they are next to each other not layered on top\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"dodge\")\n```\n\n```{r eval = FALSE}\n# A proportional bar plot\n# Note the new argument to geom_bar, fill means that each bar adds up to 1, easy to compare. \nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"fill\")\n```\n\n#### Part a {.unnumbered}\n\nName one pro and one con of using the \"proportional bar plot\" instead of one of the other three options.\nEasy to compare the values of republican versus democrat but it's hard to understand the counties themselves and where they fall in the data. \n\n#### Part b {.unnumbered}\n\nWhat's your favorite bar plot from part and why?\nI like the dodge bar because it's easy to understand and the data is side by side. \n\n### Exercise 13: Practice (now or later) {.unnumbered}\n\n::: {.callout-important title=\"Decide\"}\n\nDecide what's best for you:\n\n-   Try this extra practice now.\n-   Reflect on the above exercises and come back to this extra practice later (but before the next class).\n\n:::\n\nImport some daily weather data from a few locations in Australia:\n\n```{r}\nweather <- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\")\n```\n\nConstruct plots that address the research questions in each chunk. You might make multiple plots--there are many ways to do things!. However, don't just throw spaghetti at the wall.\n\nReflect before doing anything. What types of variables are these? How might you plot just 1 of the variables, and then tweak the plot to incorporate the other?\n\n```{r}\n# How do 3pm temperatures (temp3pm) differ by location?\n\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5)\n\nggplot(weather, aes(y = temp3pm, x = location)) + \n  geom_boxplot()\n```\n\n```{r}\n# How might we predict the 3pm temperature (temp3pm) by the 9am temperature (temp9am)?\nggplot(weather, aes(y = temp3pm, x = temp9am)) + \n  geom_point()\n\n```\n\n```{r}\n# How do the number of rainy days (raintoday) differ by location?\nggplot(weather, aes(x = location, fill = raintoday)) + \n  geom_bar()\n```\n\n\n## Exercises (optional)\n\nThe above visualizations are foundational and important. But they're not the only way to visualize the variables in our dataset.\n\n### Optional Exercise 1: Many Categories {.unnumbered}\n\nSuppose we wanted to better understand how the 2020 Republican support varied from county to county within each **state**. Since `repub_pct_20` is quantitative and `state_abbr` is categorical, we *could* make a density plot of `repub_pct_20` for each state. Reflect on why this is bad.\n\n```{r}\nggplot(elections, aes(x = repub_pct_20, fill = state_abbr)) + \n  geom_density(alpha = 0.5)\n```\n\nA facet wrap would also be bad!\n\n```{r fig.width = 8, fig.height = 8}\nggplot(elections, aes(x = repub_pct_20)) + \n  geom_density(alpha = 0.5) + \n  facet_wrap(~ state_abbr)\n```\n\nWhen we want to compare the distribution of some quantitative outcome among *many* groups / categories, a **ridgeline plot** can be a good option. These are also called **joy plots**, named after the album cover for \"Unknown Pleasures\" by Joy Division. (Look it up!) To make a ridgeline plot, we can use the `geom_density_ridges()` function from the `ggridges` package.\n\n```{r fig.height = 10, fig.width = 8, eval = FALSE}\n# Install ggridges package\nlibrary(ggridges)\n\n# Make our first joy plot\n# THINK: What DON'T you like about this?\n# I have no idea what the data is representing, hard to understand\nggplot(elections, aes(x = repub_pct_20, y = state_abbr)) + \n  geom_density_ridges()\n```\n\n```{r fig.height = 10, fig.width = 8, eval = FALSE}\n# Let's put the states in order by Republican support, not alphabet\n# How do you think fct_reorder works? We'll learn about this later in the semester.\n#Most republican states at the top, least republican states at the bottom?\nggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + \n  geom_density_ridges(alpha = 0.5)\n```\n\n\n**Follow-up questions**\n\n-   Which states tend to have the most variability in outcomes from county to county? The least?\n-   What other interesting patterns do you notice?\n-   Does this plot prompt any other questions?\n\n\n### Optional Exercise 2: Total Outcomes by State {.unnumbered}\n\nLet's import some new data and counts up the total votes (Republican and Democratic) by state, not county. This was **wrangled** from the elections data!\n\n```{r}\nelections_by_state <- read.csv(\"https://mac-stat.github.io/data/election_2020_by_state.csv\")\n```\n\nFor example, we might make a scatterplot of the 2020 vs 2016 outcomes:\n\n```{r}\nggplot(elections_by_state, aes(y = repub_pct_20, x = repub_pct_16)) + \n  geom_point()\n```\n\nBUT this isn't the easiest way to communicate or identify the changes from 1 year to the next.\n\n```{r fig.height = 10, fig.width = 8}\n# YOU TRY\n# Start by creating a \"scatterplot\" of state_abbr (y-axis) by 2020 Republican support on the x-axis\n# Color the points red\n# Scroll to solutions below when you're ready\n\n\n```\n\n```{r fig.height = 10, fig.width = 8}\n# Check it out\nggplot(elections_by_state, aes(x = repub_pct_20, y = state_abbr)) + \n  geom_point(color = \"red\")\n```\n\n```{r fig.height = 10, fig.width = 8}\n# YOU TRY\n# Reorder the states in terms of their 2020 Republican support (not alphabet)\n# Scroll to solutions below when you're ready\n\n\n```\n\n```{r fig.height = 10, fig.width = 8}\n# Check it out\nggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + \n  geom_point(color = \"red\")\n```\n\n```{r fig.height = 10, fig.width = 8}\n# Finally, add ANOTHER layer of points for the 2016 outcomes\n# What info does this new geom_point() layer need to run?\nggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + \n  geom_point(color = \"red\") + \n  geom_point(aes(x = repub_pct_16, y = state_abbr))\n```\n\n**Reflect on the following**\n\n-   What do you think this plot needs? Try it! You might need to do some digging online.\n-   Summarize the main takeaways from the plots. Which states changed the most from 2016 to 2020? The least? Where did the Republican support increase? Where did it decrease?\n-   What other questions are you left with?\n\n\n::: content-hidden\n## Wrap-up\n\nToday's activity:\n\n-   Knit when you're done.\n-   If you're working on Mac's server, remember to download and store both the .Rmd and .html on your computer.\n-   If you didn't finish in class, no problem. Finish up outside of class and check solutions in the online manual.\n\nHomework plan:\n\n-   The data viz unit will have 2 homeworks.\\\n    Homework 2 will largely be drill / practice with some guiding prompts. Homework 3 will be provide more experience working in open-ended settings.\n-   Homework 2 is due in 9 days, but you should chip away at it slowly so that you have time to absorb and ask questions. It's not designed to finish in 1 sitting.\n\nMSCS listserv:\n\nIf you’re an MSCS major / minor, or plan to be, I strongly encourage you to sign up for the [MSCS community listserv](https://docs.google.com/document/d/1Z2Ex-_z_8vm2ZhgdT4le-DwieUCtYZM8dDysaj6bseI/edit). This is where we share information about department events, internships opportunities, etc.\n\n:::\n\n## Solutions\n\n<details>\n\n<summary>Click for Solutions</summary>\n\n```{r}\n# Import data\nsurvey <- read.csv(\"https://ajohns24.github.io/data/112/about_us_2024.csv\")\n\n# How many students have now filled out the survey?\nnrow(survey)\n\n# What type of variables do we have?\nstr(survey)\n```\n\n\n\n**EXAMPLE 1: Hangout preferences**\n\n```{r}\n# Attach a package needed to use the ggplot function\nlibrary(tidyverse)\n\n# Make a ggplot\nggplot(survey, aes(x = hangout)) + \n  geom_bar()\n```\n\n\n\n**EXAMPLE 2: Temperature preferences**\n\n```{r}\nggplot(survey, aes(x = fave_temp)) + \n  geom_histogram(color = \"white\", binwidth = 5)\n\nggplot(survey, aes(x = fave_temp)) + \n  geom_density()\n```\n\n\n\n### Exercise 0:\n\n```{r}\nggplot(elections, aes(x = winner_20)) + \n  geom_bar()\nggplot(elections, aes(x = repub_pct_20)) + \n  geom_histogram(color = \"white\")\nggplot(elections, aes(x = repub_pct_20)) + \n  geom_density()\n```\n\n### Exercise 1: quantitative vs quantitative intuition check {.unnumbered}\n\nSee next exercise.\n\n\n### Exercise 2: 2 quantitiative variables {.unnumbered}\n\n```{r}\n# Set up the plotting frame\n# How does this differ than the frame for our histogram of repub_pct_20 alone?\n# ANSWER: we added a y-axis variable\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16))\n\n# Add a layer of points for each county\n# Take note of the geom: geom_point\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point()\n\n# Change the shape of the points\n# What happens if you change the shape to another number?\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(shape = 3)\n\n# YOU TRY: Modify the code to make the points \"orange\"\n# NOTE: Try to anticipate if \"color\" or \"fill\" will be useful here. Then try both.\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point(color = \"orange\")\n\n\n# Add a layer that represents each county by the state it's in\n# Take note of the geom and the info it needs to run!\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_text(aes(label = state_abbr))\n```\n\n\n### Exercise 3: Reflect {.unnumbered}\n\nThere's a strong, positive association -- the higher the Republican support in 2016, the higher it was in 2020. There are some counties in Texas and Utah where the R support in 2020 was disproportionately higher than in 2016.\n\n\n### Exercise 4: Visualizing trend {.unnumbered}\n\n```{r}\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth()\n```\n\n#### Part a {.unnumbered}\n\n```{r}\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_smooth()\n```\n\n#### Part b {.unnumbered}\n\n```{r}\nggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n```\n\n\n### Exercise 5: Your turn {.unnumbered}\n\nThere's a moderate, positive association between R support and median age -- the older the average age in a county, the higher the R support tends to be. However, there's a stronger, *negative* association between R support and median rent -- the higher the rent (a proxy for cost of living), the lower the R support tends to be.\n\n```{r}\n# Scatterplot of repub_pct_20 vs median_rent\nggplot(elections, aes(y = repub_pct_20, x = median_rent)) +\n  geom_point() \n\n# Scatterplot of repub_pct_20 vs median_age\nggplot(elections, aes(y = repub_pct_20, x = median_age)) +\n  geom_point() \n\n\n```\n\n\n### Exercise 6: A sad scatterplot {.unnumbered}\n\nSee next exercise.\n\n\n### Exercise 7: quantitative vs categorical -- violins & boxes {.unnumbered}\n\n```{r }\n# Side-by-side violin plots\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_violin()\n\n# Side-by-side boxplots (defined below)\nggplot(elections, aes(y = repub_pct_20, x = historical)) +\n  geom_boxplot()\n```\n\n**REFLECT:**\n\nThere's quite a bit of range in county-level R support within blue, purple, and red states. However, R support tends to be higher in red states and lower in blue states.\n\n\n### Exercise 8: quantitative vs categorical -- intuition check {.unnumbered}\n\nSee next exercise.\n\n\n### Exercise 9: quantitative vs categorical -- density plots {.unnumbered}\n\n```{r}\n# The colors used don't match up with the blue, purple, red labels\n# The density plots are on top of each other\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density()\n\n# scale_fill_manual \"hard codes\" or defines what colors to use for the fill categories\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n# alpha = 0.5 adds transparency\n# the closer alpha is to 0, the more transparent.\n# the closer alpha is to 1, the more opaque.\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density(alpha = 0.5) +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n# facet_wrap separates the density plots into \"facets\" for each historical group\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_density() +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\")) +\n  facet_wrap(~ historical)\n\n# Let's try a similar grouping strategy with a histogram instead of density plot.\n# Why is this terrible?\nggplot(elections, aes(x = repub_pct_20, fill = historical)) +\n  geom_histogram(color = \"white\") +\n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n```\n\n\n### Exercise 10 {.unnumbered}\n\n-   One pro of density plots relative to boxplots: doesn't oversimplify the data / boil the data down to just 5 numbers.\n\n-   Name one con of density plots relative to boxplots: boxplots can be easier to interpret\n\n\n### Exercise 11: categorical vs categorical intuition check {.unnumbered}\n\nsee exercise below\n\n\n### Exercise 12: categorical vs categorical {.unnumbered}\n\n```{r}\n# A stacked bar plot\n# historical = x axis / bar categories\n# winner_20 = fills the bars\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar()\n\n# A faceted bar plot\nggplot(elections, aes(x = winner_20)) +\n  geom_bar() +\n  facet_wrap(~ historical)\n\n# A side-by-side bar plot\n# Note the new argument to geom_bar\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"dodge\")\n\n# A proportional bar plot\n# Note the new argument to geom_bar\nggplot(elections, aes(x = historical, fill = winner_20)) +\n  geom_bar(position = \"fill\")\n```\n\n#### Part a {.unnumbered}\n\npro = easier to compare the relative outcomes in blue vs purple vs red states con = lose track of how many counties fall into blue vs purple vs red states\n\n\n### Exercise 13: Practice (now or later) {.unnumbered}\n\n```{r}\nweather <- read.csv(\"https://mac-stat.github.io/data/weather_3_locations.csv\")\n\n# How do 3pm temperatures (temp3pm) differ by location?\nggplot(weather, aes(x = temp3pm, fill = location)) + \n  geom_density(alpha = 0.5)\nggplot(weather, aes(y = temp3pm, x = location)) + \n  geom_boxplot()\n\n# How might we predict the 3pm temperature (temp3pm) by the 9am temperature (temp9am)?\nggplot(weather, aes(y = temp3pm, x = temp9am)) + \n  geom_point()\n\n# How do the number of rainy days (raintoday) differ by location?\nggplot(weather, aes(x = location, fill = raintoday)) + \n  geom_bar()\n```\n\n### Optional exercise 1: Dealing with lots of categories {.unnumbered}\n\n```{r fig.height = 10, fig.width = 8}\n# Install ggridges package\nlibrary(ggridges)\n\n# Make our first joy plot\n# THINK: What DON'T you like about this?\nggplot(elections, aes(x = repub_pct_20, y = state_abbr)) + \n  geom_density_ridges()\n\n# Let's put the states in order by Republican support, not alphabet\n# How do you think fct_reorder works? We'll learn about this later in the semester.\nggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + \n  geom_density_ridges(alpha = 0.5)\n\n# YOUR TURN: color/fill the ridges according to a state's historical voting patterns \n# and add meaningful axis labels\nggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20), fill = historical)) + \n  geom_density_ridges(alpha = 0.5) + \n  labs(y = \"state\", x = \"2020 Republican support (%)\") + \n  scale_fill_manual(values = c(\"blue\", \"purple\", \"red\"))\n\n```\n\n\n### Optional exercise 2: total outcomes by state {.unnumbered}\n\n```{r fig.height = 10, fig.width = 8}\nelections_by_state <- read.csv(\"https://mac-stat.github.io/data/election_2020_by_state.csv\")\n\nggplot(elections_by_state, aes(y = repub_pct_20, x = repub_pct_16)) + \n  geom_point()\n\n# YOU TRY\n# Start by creating a \"scatterplot\" of state_abbr (y-axis) by 2020 Republican support on the x-axis\n# Color the points red\nggplot(elections_by_state, aes(x = repub_pct_20, y = state_abbr)) + \n  geom_point(color = \"red\")\n\n# YOU TRY\n# Reorder the states in terms of their 2020 Republican support (not alphabet)\nggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + \n  geom_point(color = \"red\")\n\n# Finally, add ANOTHER layer of points for the 2016 outcomes\n# What info does this new geom_point() layer need to run?\nggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + \n  geom_point(color = \"red\") + \n  geom_point(aes(x = repub_pct_16, y = state_abbr))\n```\n\n</details>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":false,"freeze":"auto","echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":true,"code-line-numbers":true,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"css":["../style/custom.css"],"output-file":"ica-bi.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","editor":{"markdown":{"wrap":"sentence"}},"theme":{"light":"flatly","dark":"darkly"},"code-copy":true,"title":"Bivariate Viz"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}